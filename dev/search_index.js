var documenterSearchIndex = {"docs":
[{"location":"man/LaMEM_MicrosoftVisualStudioCode/#Debugging-LaMEM-and-Microsoft-Visual-Studio-Code","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"","category":"section"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"Microsoft Visual Studio Code is a releatively new IDE, which we found quite useful in combination with LaMEM. Here, we provide some instruction that helped us do this on a Mac. Linux instructions are likely similar (probably easier).","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/#1.1.2.-Install-the-debugger-and-make-sure-it-works-on-Mac","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"1.1.2. Install the debugger and make sure it works on Mac","text":"","category":"section"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"We assume that you download and install VSC to your machine and installed the C/C++ package as well. ","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"First, you will have to make sure that you installed the gnu debugger (provided that your version of PETSc was installed with gcc compilers). Important is ofcourse that the versions are compatible. One possibility is to install MacPorts, and install compilers with:","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"$ sudo port install gdb","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"Once installed we have to ensure that it actually works on a mac, as the safety precautions of mac do not allow gdb to control other processes. Therefore, you need to codesign gdb by creating a certificate that allows it to hack your executable.","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"An explanation of how that can be done is given here:","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"Debugging LaMEM and Microsoft Visual Studio Code","text":"https://sourceware.org/gdb/wiki/BuildingOnDarwin#Givinggdbpermissiontocontrolotherprocesses%7Cofficial","category":"page"},{"location":"man/LaMEM_MicrosoftVisualStudioCode/#1.1.2.-Linux","page":"Debugging LaMEM and Microsoft Visual Studio Code","title":"1.1.2. Linux","text":"","category":"section"},{"location":"man/Installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"man/Installation/#1.0-Precompiled-binaries","page":"Installation","title":"1.0 Precompiled binaries","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The absolute simplest way to get LaMEM working on your system is to download pre-compiled libraries which are available for over 100 architectures and systems, including essentially all systems in use at the moment. You can install it through the julia package manager, and you can run it either through julia or through the terminal (after setting the correct path):","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"julia> ]\npkg> add LaMEM\npkg> test LaMEM","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"More details are given here. This will work fine on your local machine or server (including in parallel). Yet, if you are planning to use LaMEM on large parallel HPC clusters you (or your system administrator) may still need to compile PETSc.","category":"page"},{"location":"man/Installation/#1.1-Installation-from-source","page":"Installation","title":"1.1 Installation from source","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"LaMEM is build in top of PETSc, which provides great support for parallel solvers and grid infrastructure. Different than other codes used in geodynamics, LaMEM does not require an excessive amount of additional packages, except for the ones that can be downloaded through the PETSc installation system. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"This installation guide was created based on initial input from Giovanni Mainetti and Andrea Bistacchi (University of Milano Bicocca), with input from the Mainz team (Andrea Picollo, Boris Kaus).","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The LaMEM development team uses different approaches internally, and over years many aspects of installing PETSc and using LaMEM become easier. Yet if you ask us now (october 2020), what we recommend when you are a new user it would be the following:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"PETSc using the correct version, including the external packages SUPERLU_DIST, MUMPS, PASTIX and UMFPACK (Suitesparse). These are all direct solvers that we use for 2D simulations, or as coarse grid solvers, so they are useful to have. If you happen to have compilation errors with some of them (e.g., mumps), it is also ok to only have one direct solver.\nPython (3+ is best), to run the LaMEM testing suite. \nMicrosoft Visual Studio Code, which is by far the best debugger/development environment at the moment. Useful plugins: C/C++ with Intellisense (debugging LaMEM code), Python, Remote SSH (great if you want to change LaMEM inut scripts on a remote server)\nParaview for visualizations.   ","category":"page"},{"location":"man/Installation/#1.1.1-Prerequisites","page":"Installation","title":"1.1.1 Prerequisites","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"We have tested LaMEM on Linux, Mac and Windows 10. The development team uses Mac and Linux, so these machines are best supported. As Windows 10 now has a (still experimental) bash shell (called WLS), you can install PETSc within this shell by following the Linux installation instructions.","category":"page"},{"location":"man/Installation/#1.1.2-Automated-PETSc-installation-using-Spack","page":"Installation","title":"1.1.2 Automated PETSc installation using Spack","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The most complicated step in getting LaMEM running is to install the correct version of PETSc, on your laptop or cluster. Below we give more specific info if you want to do it yourself on Mac or Linux.  Yet, an alternative and newer method to install PETSc and all required compilers on a new (linux/mac) machine or even on a complicated cluster is spack. It installs everything required and consistently with the same compilers in a separate directory and works quite well in our experience (including installing additional packages).  A spack tutorial can be found here. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Brief instructions: You can install spack in your home directory with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ git clone https://github.com/spack/spack.git ~/spack\n$ cd ~/spack","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"And add environmental variables:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ . share/spack/setup-env.sh ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Find the compilers you have","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ spack compilers","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Get info about the PETSc package that you can install:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ spack info petsc","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Install PETSc with the correct packages, and leave out stuff we don't need. The optimized compilation of PETSc is installed with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ spack install petsc@3.22.5 +mumps +suite-sparse -hypre -hdf5 -shared -debug","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If that works out, you'll have to update your environmental variables and create the PETSC_OPT variable","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ . share/spack/setup-env.sh \n$ export PETSC_OPT=$(spack location -i petsc)       ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"You would have to redo the same for a debug version of PETSc to hve the full compilation up and running. ","category":"page"},{"location":"man/Installation/#1.1.3-Manual-PETSc-installation","page":"Installation","title":"1.1.3 Manual PETSc installation","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The alterative method is to install PETSc yourself. That is a bit more effort, but also enables you to install packages (like Pastix), that are not available in the spack distribution. Below we have installation instructions for Mac and Linux. On Windows, uses the WSL and follow the linux instructions.","category":"page"},{"location":"man/Installation/#1.1.3.1-Mac","page":"Installation","title":"1.1.3.1 Mac","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"On Mac, you will need to ensure that Xcode and the Xcode command line tools are installed. It is also a good idea to install compilers and MPI using a package manager. One possibility is to install MacPorts, and install compilers with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo port install gcc7","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"and make it the default compilers","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo port select --set gcc gcc7","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Next, install the MPI library MPICH with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo port install mpich-gcc7-fortran","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"and make it the default with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo port select --set mpi mpich-gcc7-fortran","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"You may easily have several other compilers installed on your Mac. For a correct installation of PETSc, you will need to ensure that all compilers point to the correct version (in the example above, gcc7 installed from MacPorts). Test this with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ mpif90 --version\n$ mpicc --version","category":"page"},{"location":"man/Installation/#1.1.3.2-Linux","page":"Installation","title":"1.1.3.2 Linux","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"These instructions have been tested with Ubuntu. Make sure that your packages are installed correctly and are up to date, with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo apt update","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If needed, update all outdated packages with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo apt dist-upgrade","category":"page"},{"location":"man/Installation/#1.1.3.3-Python","page":"Installation","title":"1.1.3.3 Python","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Make sure that both python 3.0 and python 2.7 is installed, for example by typing ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ which python","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If it is not installed, change that which can be done on Linux with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"sudo apt install python2.7 python-pip","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"or on Mac, for example, by installing the anaconda package. Alternatively, you can install the Macports package manager and install it with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"sudo port install python27","category":"page"},{"location":"man/Installation/#1.1.3.4-Compilers-and-various-other-packages","page":"Installation","title":"1.1.3.4 Compilers and various other packages","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"PETSc will need fortran and C compilers. Which fortran compiler you use is not all that important, so you are welcome to use gcc and gfortran. Once you are a more experienced LaMEM user and do production runs, you might want to try different options to see if this speeds up the simulations. In addition to the compilers, it is a good idea to install git and cmake as well. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"On linux this can be done with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo apt update\n$ sudo apt install gfortran gcc git cmake","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"and on Mac, using macports","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo port selfupdate\n$ sudo port install gfortran gcc git cmake","category":"page"},{"location":"man/Installation/#1.1.3.5-PETSc","page":"Installation","title":"1.1.3.5 PETSc","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The most important package for LaMEM is PETSc. If you just want to give LaMEM a try, the most basic installation is sufficient. Once you do production runs, it is worthwhile to experiment a bit with more optimized solver options. Installing PETSc with those does not always work, but PETSc has a very responsive user list which is searchable, and where you can post your questions if needed.  As PETSc regularly changes its syntac, LaMEM is always only compatible with a particular version of PETSc. This is typically updated once per year. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The current version of LaMEM is compatible with PETSc 3.22.5  We have also successfully compiled LaMEM with PETSc 3.23.x so you are also welcome to use that, but our Github actions CI testing environment uses 3.22.5 at the moment. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"You can download the PETSc version you need here. Do that and unzip it with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ tar -xvf petsc-3.22.5.tar.gz","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Change to the PETSc directory from the command window, for example with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ cd ~/Software/PETSc/petsc-3.22.5","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"and specify the PETSC environmental variable:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ export PETSC_DIR=$PWD","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The simplest installation of PETSc can be configured as follows (assuming you are in the PETSc directory). This will automatically download and install the MPI library as well, together with a few other packages we will use.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$  ./config/configure.py --prefix=/opt/petsc/petsc-3.22.5-opt --download-mpich=1 --download-superlu_dist=1 --download-mumps=1 --download-scalapack=1 --download-fblaslapack=1 --with-debugging=0 --FOPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --COPTFLAGS=-O3 --with-shared-libraries=0 --download-cmake","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"This will install an optimized (fast) version of PETSc on your system in the directory opt/petsc/petsc-3.22.5-opt. You can change this directory, obviously, but in that case please remember where you put it as we need it later.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If you want to have more control over PETSc and use the MPI version that you installed earlier on your system, using the package manager (see above), you can install it as: ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ ./config/configure.py --prefix=/opt/petsc/petsc-3.22.5-opt --download-superlu_dist=1 --doCleanup=1 --download-mumps=1 --download-suitesparse=1 --download-scalapack=1 --download-fblaslapack=1  --FOPTFLAGS=-O3 --CXXOPTFLAGS=-O3 --COPTFLAGS=-O3 --with-shared-libraries=0 --download-cmake --with-debugging=0 --with-mpi-include=/opt/local/include/mpich-gcc7/ --with-cc=/opt/local/bin/mpicc --with-cxx=/opt/local/bin/mpicxx --with-fc=/opt/local/bin/mpif90 --with-mpi-lib=/opt/local/lib/mpich-gcc7/libmpi.a","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Note that the above lines assume that mpi is installed under the directory /opt/local/bin/.  You can check that this is the case for you as well by typing","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ which mpiexec","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"which should give you the dirtectory /opt/local/bin/mpiexec. If it gives you a different directory, you will have to use that directory in the PETSc configuration listed above.  Both methods discussed above will install the parallel direct solvers MUMPS and SUPERLU_DIST. LaMEM will also work without these parallel solvers, but we find them particularly useful for 2D simulations and as coarse grid solvers.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"After the configuration step has finished succesfully (which will take some time), it should look something like (Image: Configure PETSc)","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Next, make PETSc with:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ make PETSC_DIR=/Users/kausb/Software/PETSC/petsc-3.22.5 PETSC_ARCH=arch-darwin-c-opt all","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"After that, you will be asked to install PETSc ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"sudo make PETSC_DIR=/Users/kausb/Software/PETSC/petsc-3.22.5 PETSC_ARCH=arch-darwin-c-opt install","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"and test whether the installation works with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ make PETSC_DIR=/opt/petsc/petsc-3.22.5-opt PETSC_ARCH=\"\" check","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"This will run a few test cases and if all is well, will tell you so.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If you only run simulations with LaMEM, the optimized version of PETSc described above will be sufficient. Yet, if you also develop routines and have to do debugging, it is a good idea to also install the debug version:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ ./config/configure.py --prefix=/opt/petsc/petsc-3.22.5-deb --download-superlu_dist=1 --doCleanup=1 --download-mumps=1 --download-suitesparse=1 --download-scalapack=1 --download-fblaslapack=1 --FOPTFLAGS=\"-O0 -g\" --CXXOPTFLAGS=\"-O0 -g\" --COPTFLAGS=\"-O0 -g\" --with-shared-libraries=0 --download-cmake --with-debugging=1 --with-mpi-include=/opt/local/include/mpich-gcc7/ --with-cc=/opt/local/bin/mpicc --with-cxx=/opt/local/bin/mpicxx --with-fc=/opt/local/bin/mpif90 --with-mpi-lib=/opt/local/lib/mpich-gcc7/libmpi.a","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Compared to before, we have three changes, namely: ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"That the prefix (or the directory where PETSc will be put) is changed to --prefix=/opt/petsc/petsc-3.22.5-deb \nWe tell it to compile a debug version of PETSc with  --with-debugging=1\nWe change the optimization flags to --FOPTFLAGS=\"-O0 -g\" --CXXOPTFLAGS=\"-O0 -g\" --COPTFLAGS=\"-O0 -g\"","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"With this you can repeat the procedure above. Just for completion, the simple configute option of above in debug mode would thus be:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$  ./config/configure.py --prefix=/opt/petsc/petsc-3.22.5-deb --download-mpich=1 --download-superlu_dist=1 --download-mumps=1 --download-scalapack=1 --download-fblaslapack=1 --download-cmake --with-debugging=1 --FOPTFLAGS=\"-O0 -g\" --CXXOPTFLAGS=\"-O0 -g\" --COPTFLAGS=\"-O0 -g\" --with-shared-libraries=0","category":"page"},{"location":"man/Installation/#1.1.4-Installing-PETSc-on-a-cluster","page":"Installation","title":"1.1.4 Installing PETSc on a cluster","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Chances exists that you want to install PETSc on a cluster. The main point to take into account is that you need to link it against the appropriate MPI compilers. ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If you are lucky, a previous version of PETSc exists already on the cluster and you want to reinstall it in your home directory while adding some new packages such as SUPERLU_DIST or MUMPS. In that case, there is simple trick to find out the exact options that were used to compile PETSc on the cluster: ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Compile one of the PETSc examples, for example ex1 in the PETSc directory under /src/ksp/ksp/examples/tutorials\nRun it, while adding the command-line option -log_view\nAt the end of the simulation, it will show you the command-line options that were used to compile PETSc. These can be long; for us it was:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Configure options: --prefix=/cluster/easybuild/broadwell/software/numlib/PETSc/3.22.5-intel-2018.02-downloaded-deps --with-mkl_pardiso=1 --with-mkl_pardiso-dir=/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl --with-hdf5=1 --with-hdf5-dir=/cluster/easybuild/broadwell/software/data/HDF5/1.8.20-intel-2018.02 --with-large-io=1 --with-c++-support=1 --with-debugging=0 --download-hypre=1 --download-triangle=1 --download-ptscotch=1 --download-pastix=1 --download-ml=1 --download-superlu=1 --download-metis=1 --download-superlu_dist=1 --download-prometheus=1 --download-mumps=1 --download-parmetis=1 --download-suitesparse=1 --download-hypre-shared=0 --download-metis-shared=0 --download-ml-shared=0 --download-mumps-shared=0 --download-parmetis-shared=0 --download-pastix-shared=0 --download-prometheus-shared=0 --download-ptscotch-shared=0 --download-suitesparse-shared=0 --download-superlu-shared=0 --download-superlu_dist-shared=0 --with-cc=mpiicc --with-cxx=mpiicpc --with-c++-support --with-fc=mpiifort --CFLAGS=\"-O3 -xCORE-AVX2 -ftz -fp-speculation=safe -fp-model source -fPIC\" --CXXFLAGS=\"-O3 -xCORE-AVX2 -ftz -fp-speculation=safe -fp-model source -fPIC\" --FFLAGS=\"-O2 -xCORE-AVX2 -ftz -fp-speculation=safe -fp-model source -fPIC\" --with-gnu-compilers=0 --with-mpi=1 --with-build-step-np=4 --with-shared-libraries=1 --with-debugging=0 --with-pic=1 --with-x=0 --with-windows-graphics=0 --with-fftw=1 --with-fftw-include=/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl/include/fftw --with-fftw-lib=\"[/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl/lib/intel64/libfftw3xc_intel_pic.a,libfftw3x_cdft_lp64_pic.a,libmkl_cdft_core.a,libmkl_blacs_intelmpi_lp64.a,libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a]\" --with-scalapack=1 --with-scalapack-include=/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl/include --with-scalapack-lib=\"[/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl/lib/intel64/libmkl_scalapack_lp64.a,libmkl_blacs_intelmpi_lp64.a,libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a]\" --with-blaslapack-lib=\"[/cluster/easybuild/broadwell/software/numlib/imkl/2018.2.199-iimpi-2018.02-GCC-6.3.0/mkl/lib/intel64/libmkl_intel_lp64.a,libmkl_sequential.a,libmkl_core.a]\" --with-hdf5=1 --with-hdf5-dir=/cluster/easybuild/broadwell/software/data/HDF5/1.8.20-intel-2018.02","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Use the same options for your latest installation, while adding config options you may need.","category":"page"},{"location":"man/Installation/#1.1.5-Download-and-compile-LaMEM","page":"Installation","title":"1.1.5 Download and compile LaMEM","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Once you successfully installed the correct version of PETSc, installing LaMEM should be straightforward. You can download the latest version of LaMEM with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"git clone https://github.com/UniMainzGeo/LaMEM.git ./LaMEM","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Next you need to specify the environmental variables PETSC_OPT and PETSC_DEB:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"export PETSC_OPT=/opt/petsc/petsc-3.22.5-opt\nexport PETSC_DEB=/opt/petsc/petsc-3.22.5-deb","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Note that this may need to be adapted, depending on the machine you use. You may also want to specify this in your .bashrc files.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Next you can install an optimized version of LaMEM by going to the /src directory in the LaMEM directory, and typing:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"make mode=opt all","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"At the end of the installation, it should look like: (Image: Installation_LaMEM)","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Similarly, you can install a debug version of LaMEM with","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"make mode=deb all","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The binaries are located in: ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"/LaMEM/bin/opt/LaMEM\n/LaMEM/bin/deb/LaMEM","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"You have succesfully installed LaMEM and should try if everything works correctly by running the tests:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$cd ../tests\n$make test","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The first time you do this, it will download the python package pyTestHarness, by Dave May and Patrick Sanan, which we use for testing. If it fails to download it autimatically, you may have to download it manually.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Next, we start the python script runLaMEM_tests.py which runs the test-suite. The summary at the end should only show passed tests.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"If this works, we are ready to run a first simulation. Navigate to the following directory:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$cd ../input_models/BuildInSetups","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The *.dat files in that directory (list them with typing ls on the command-line) are standard LaMEM input files. To start a simulation the only thing to do is to call the code:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$mpiexec -n 1 ../../bin/opt/LaMEM -ParamFile FallingSpheres_Multigrid.dat ","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"which should looke like: (Image: Installation_FirstRun)","category":"page"},{"location":"man/Installation/#1.2.-Visualization","page":"Installation","title":"1.2. Visualization","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"The output of LaMEM is in VTK format, which can be read and visualized with any software that can handle this filetype. For us, the our choice of code is Paraview, which is very well maintained package that runs on all systems, and even allows you to do parallel rendering. We usually simply download the binaries from the webpage. If you want to render on a large-scale cluster instead, we recommend that you buy your system administrator a beer.","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"After opening, paraview looks like this:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"(Image: Paraview 5.4)","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"You can open a LaMEM simulation by opening the *.pvd files in the directory from where you started the simulation. Hitting the \"play\" button will show you an animation of all available timesteps.","category":"page"},{"location":"man/Installation/#1.2.1.-Linux-Graphics-card","page":"Installation","title":"1.2.1. Linux - Graphics card","text":"","category":"section"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Having the correct graphics card is important to have Paraview run efficiently and create output. Paraview will also run without graphics card, but not quite as smoothly. These instructions apply to workstations with Nvidia graphic cards. To check if your Nvidia driver is updated, type:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ ubuntu-drivers devices","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"This results in a list of devices where you should see your Nvidia graphic card and drivers, e.g.:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ == /sys/devices/pci0000:00/0000:00:05.0/0000:02:00.0 ==\n$ modalias : pci:v000010DEd00001180sv00001043sd0000842Ebc03sc00i00\n$ vendor   : NVIDIA Corporation\n$ model    : GK104 [GeForce GTX 680]\n$ driver   : nvidia-340 - distro non-free\n$ driver   : nvidia-driver-396 - third-party free recommended\n$ driver   : nvidia-driver-390 - third-party free\n$ driver   : nvidia-304 - third-party free\n$ driver   : xserver-xorg-video-nouveau - distro free builtin","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"To install the recommended driver for your card, type:","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo ubuntu-drivers autoinstall","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Alternatively to install a specific driver (e.g. nvidia-340):","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"$ sudo apt install nvidia-340","category":"page"},{"location":"man/Installation/","page":"Installation","title":"Installation","text":"Then reboot to use the new driver.","category":"page"},{"location":"man/Features/#5.-Features","page":"5. Features","title":"5. Features","text":"","category":"section"},{"location":"man/Features/","page":"5. Features","title":"5. Features","text":"Here we will discuss various aspects of using LaMEM.","category":"page"},{"location":"man/Features/","page":"5. Features","title":"5. Features","text":"[5.1 Boundary conditions]","category":"page"},{"location":"man/InitialModelSetup/#3.-Initial-model-setup","page":"Initial Model setup","title":"3. Initial model setup","text":"","category":"section"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"There are several ways in which you can define the initial geometry of your model setup:","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.1 Build-in geometries","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.2 Matlab/Octave geometries ","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.3 Geometry from geomIO-file","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"The build-in geometries and Matlab/Octave files allow you to specify the initial temperature structure.  In addition, you can also independently set a temperarature profile with: ","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.4 Temperature input file","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"In some cases you might be interested to start with a different temperature profile, such as a steady-state temperature profile for your setup.  See:","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.5 Temperature diffusion","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"By default, the internal free surface is set to a constant value.  In some cases that is insufficient and you can also set the initial topography with a file: ","category":"page"},{"location":"man/InitialModelSetup/","page":"Initial Model setup","title":"Initial Model setup","text":"3.6 Topography input file","category":"page"},{"location":"man/InputGeometries/#3.-Initial-model-setup","page":"3. Initial model setup","title":"3. Initial model setup","text":"","category":"section"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"There are several ways in which you can define the initial geometry of your model setup. Click on the blue titles to get more extended info:","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.1 Build-in geometries This is for simpler geometries and can directly be set from the LaMEM *.dat file. The advantage is that it will work for any resolution, so if this is possible in your case go for it!","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.2 Julia based setup More complicated setups can be constructed in julia by using the GeophysicalModelGenerator package. This is the recommended way to do this.","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.3 Matlab/Octave geometries  Previously, we used matlab scripts to create model setups. We keep this here for historical reasons (and because the geomIO workflow has not yet been fully ported to julia). ","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.4 Geometry from geomIO-file","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"The build-in geometries and Matlab/Octave files allows you to specify the initial temperature setup as well.  In addition, you can also, independently, set a temperarature profile with: ","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.5 Temperature input file The initial thermal structure can be set in julia or the matlab scripts (as described above) but also seperately if you want, as described here. ","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.6 Temperature diffusion In some cases you might be interested to start with a different temperature profile, such as a steady-state temperature profile for your setup as described here.","category":"page"},{"location":"man/InputGeometries/","page":"3. Initial model setup","title":"3. Initial model setup","text":"3.7 Topography input file By default, the internal free surface is set to a constant elevation. Instead, you can also set the initial topography with a file, as explained here.","category":"page"},{"location":"man/Quickstart/#LaMEM-_-Lithosphere-and-Mantle-Evolution-Model","page":"Quick start","title":"LaMEM _ Lithosphere and Mantle Evolution Model","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM is a parallel 3D numerical code that can be used to model various thermomechanical  geodynamical processes such as mantle-lithosphere interaction for rocks  that have visco-elasto-plastic rheologies. It was developed to better understand geological  processes, particularly related to the dynamics of the crust and  lithosphere and their  interaction with the mantle. It can, however, also be used to solve geomechanical problems, includes (compressible) poroelasticity, can be used to compute gravity anomalies and has an (adjoint) inversion framework. The code uses a marker-in-cell approach with a staggered finite difference discretization and is build on top of PETSc such that it can run on anything from a laptop to a massively parallel machine. ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"A range of (Galerkin) multigrid and iterative solvers are available, for both linear and non-linear rheologies, using Picard and  quasi-Newton solvers (provided through the PETSc interface).","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM has been tested on a variety of machines ranging from laptops to a massively parallel cluster with 458'752 cores.","category":"page"},{"location":"man/Quickstart/#Directory-structure","page":"Quick start","title":"Directory structure","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM consists of the following directories:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"/bin          -  Contains binaries after compilation (/deb contains the debug version and /opt the optimized)\n/docs         -  Some documentation and the current webpage\n/input_models -  Various input models (run with ../bin/LaMEM -ParamFile *.dat). See the README file in that directory.\n/matlab       -  Various matlab files to change initial mesh and read binary output into matlab. [n]\n/scripts      -\t Various scripts, currently mainly related to Paraview VTK files.\n/src          -\t LaMEM source code; compile with \"make mode=opt all\" and \"make mode=deb all\"\n/test         -\t Directory with the testing framework. \n/utils        -\t Various non-essential files.","category":"page"},{"location":"man/Quickstart/#2.-Download-and-build-LaMEM","page":"Quick start","title":"2. Download and build LaMEM","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You can download pre-compiled binaries of LaMEM and directly use it (also in parallel), through the LaMEM julia package, as explained below. You can also compile LaMEM manually to get the latest update of the code.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"For changing input files, logging in to remote machines etc. etc, we recommend Visual Studio Code, along with the remoteSSH and julia plugins.","category":"page"},{"location":"man/Quickstart/#2.1-Using-pre-compiled-binaries","page":"Quick start","title":"2.1 Using pre-compiled binaries","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"The recommended way to install LaMEM on your machine (windows/mac/linux) is to use the julia package manager. For this download a recent version of julia, and start it.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"julia>]\npkg> add LaMEM\npkg> test LaMEM","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Once this is installed, you can use it from within julia with:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"julia> using LaMEM","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"(Note: use the backspace to go back from the package manager to the julia REPL.) Running a simulation can be done with","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"julia> ParamFile=\"../../input_models/BuildInSetups/FallingBlock_Multigrid.dat\";\njulia> run_lamem(ParamFile, 2, \"-nstep_max = 1\")","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"This will run the simulation on 2 processors for 1 timestep.  You do have to make sure that the path to the input *.dat file is correct in your system.  Most likely you will have to change the path, which can be done with the build-in terminal (or PowerShell) in julia:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"julia>; \nshell> cd ~/WORK/LaMEM/input_models/BuildInSetups/","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"If you wish, you can also directly run the downloaded binaries from your terminal without using julia. In that case you'll need to set the correct paths to the required binaries (LaMEM,mpiexec) and required dynamic libraries, which you can show with:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"julia> show_paths_LaMEM()\nLaMEM & mpiexec executables path : /Users/kausb/.julia/artifacts/26630bc992637321a5e5d3c0bc66005163370db6/bin:/Users/kausb/.julia/artifacts/483cb6f025b5a8266429afcb3f4ad498c58aaaee/bin\nDynamic libraries                : /Applications/Julia-1.7.app/Contents/Resources/julia/lib/julia:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"The LaMEM julia package has a number of other functions that may come in handy, such as reading timesteps back into julia. ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"If you want test some of the LaMEM examples in this repository, either clone the repo (below) or download it (three dots at the top of this page).","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Limitations  Whereas the pre-build libraries are quite handy, there are some limitations:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"On Windows the MUMPS parallel direct solver is not available. SuperLU_dist does work, so we recommend using that instead.\nOn Mac, the current compilation of SuperLUdist does not seem to work, so use MUMPS instead. Linux has both SuperLUdist & MUMPS available.","category":"page"},{"location":"man/Quickstart/#2.2-Compiling-it-yourself","page":"Quick start","title":"2.2 Compiling it yourself","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"If want, you can ofcourse also compile LaMEM yourself, which will give you the latest version of the code. On large HPC clusters, this is often necessary as you need to link PETSc to the optimized MPI implementation on that system. ","category":"page"},{"location":"man/Quickstart/#2.2.1-Main-dependencies","page":"Quick start","title":"2.2.1 Main dependencies","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM crucially relies on:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"PETSc 3.18.x, ideally installed with the external packages SUPERLU_DIST, MUMPS and PASTIX.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"and to a minor extend on:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Python, to run the LaMEM testing environment, and see if things work as expected. \nParaview, to visualize results.\nGIT, in order to pull the latest version of LaMEM\nMATLAB (version not important), in order to facilitate creating more complicated input geometries\ngeomIO, to create input geometries from Inkscape (see https://geomio.bitbucket.io) \nAny text editor, to modify the LaMEM input files. ","category":"page"},{"location":"man/Quickstart/#2.2.2-Dependency-installation","page":"Quick start","title":"2.2.2 Dependency installation","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"We develop LaMEM on Linux and Mac machines, but we also have had success on Windows 10, where we recommend installing it through the (new) bash shell. In order for LaMEM to work, you'll need to install the correct version of PETSc first. PETSc is usually not backwards compatible, so it won't work with the incorrect version. Also please note that we do not always immediately update LaMEM to the latest version of PETSc, so you may have to download/install an older version.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"PETSc:     See http://www.mcs.anl.gov/petsc/petsc-as/documentation/installation.html    for installation instructions. We also provide some installation instructions on how to compile     PETSc (and mpich, gcc, as well as PETSc) on various machines in /doc/installation. The simplest manner is sometimes to let PETSc install all additional packages (like MPICH), but that often does not result in the most efficient code. You also have to make sure that the path is set correctly in that case (for MPICH, for example). On a large scale cluster, you will have to link against the cluster libraries (for MPI, for example).\nIf you want to do debugging of LaMEM as well, it is a good idea to install both a DEBUG and an OPTIMIZED version of PETSc, in separate directories.\nNothing else - if the correct version of PETSc is installed, LaMEM will work fine.","category":"page"},{"location":"man/Quickstart/#2.2.3-Install-LaMEM","page":"Quick start","title":"2.2.3 Install LaMEM","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Download LaMEM from GitHub, preferable by using GIT on your system:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"        $ git clone https://github.com/UniMainzGeo/LaMEM.git ./LaMEM","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Set the environment variables in your .bashrc or .bash_profile scripts such that the LaMEM makefile knows where to look for PETSc:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"        export PETSC_OPT=DIRECTORY_WHERE_YOU_INSTALLED_YOUR_OPTIMIZED_PETSC\n        export PETSC_DEB=DIRECTORY_WHERE_YOU_INSTALLED_YOUR_DEBUG_PETSC ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"To build the source in the /src directory:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"        $ make mode=opt all ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Once build, you can verify that LaMEM works correctly with:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"        $ cd /tests\n        $ make test","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Note that we use the PythonTestHarness framework, which is a set of Python scripts that simplify regression testing (developed by Dave May and Patrick Sanan). The first time you run the makefile, it will download the git repository and put it in the directory ./pythontestharness. If this fails for some reason, you can download it directly from the Dave's bitbucket repository and put it in the directory. In that case, it will ask you which batch queuing system to use, which should be <none>.\t","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Ideally, the tests should run all with no problems. Depending on which external direct solver packages you installed, some may fail (for example, if you did not install PASTIX). The python test harness will give some hints as where the issues came from.  ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"In case you happen to have MATLAB installed on your system, additional tests will be performed in which an input setup is generated from within MATLAB. In order for this to work, you will have to let the system know where the MATLAB-binary is located by setting the following environmental variable (which can also be set in your .bashrc file):","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"        $ which matlab\n        /path_to_your_matlab_library/matlab\n        $ export MATLAB=/path_to_your_matlab_library/matlab\n        $ make test","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Note that you can look at the tests directory contains subdirectories that are named: t?_*** (for example ./t1_FB1_Direct/ which contains a test for a Falling Block setup). Within each of these directories you will find a working LaMEM input file (*.dat), and a python file that runs the actual tests in that directory (such as test_1_FB1.py). Have a look at these files to learn more on how to run LaMEM.","category":"page"},{"location":"man/Quickstart/#3.-Getting-started","page":"Quick start","title":"3. Getting started","text":"","category":"section"},{"location":"man/Quickstart/#3.1-First-simulation","page":"Quick start","title":"3.1 First simulation","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You can run your first LaMEM simulation with ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"      $ cd /input_models/BuildInSetups\n      $ ../../bin/opt/LaMEM -ParamFile FallingBlock_IterativeSolver.dat","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"which will run a setup that has a falling block of higher density embedded in a lower density fluid for 10 timesteps.     Run the same in parallel with:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"     $ mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile FallingBlock_IterativeSolver.dat","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You can visualize the results with Paraview by opening the file FB_iterative.pvd, and pushing the play button (after selecting the appropriate view, such as surface and the appropriate field such as velocity).","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You can change the input parameters (such as resolution) by opening the file FallingBlock_IterativeSolver.dat with a texteditor and changing the parameters.","category":"page"},{"location":"man/Quickstart/#3.2-Learning-more","page":"Quick start","title":"3.2 Learning more","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You can also look at the User Guide. This website also contains more extensive documentation on how to use LaMEM.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"The best way to learn LaMEM is by looking at the input files in the order that is recommended in the README files. Start with /BuildInSetups, which shows various example with geometries that are specified in the LaMEM input file. ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"All possible input parameters in LaMEM are listed in the file /input_models/input/lamem_input.dat, which is worthwhile having a look at. Note that not all of these parameters have to be set (we select useful default options in most cases). ","category":"page"},{"location":"man/Quickstart/#4.-Development-team","page":"Quick start","title":"4. Development team","text":"","category":"section"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"The main developers of the current version are:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Anton Popov         (Johannes Gutenberg University Mainz, popov@uni-mainz.de), 2011-\nBoris Kaus          (JGU Mainz, kaus@uni-mainz.de), 2011-\nTobias Baumann      (JGU Mainz), 2011-\nGeorg Reuber        (JGU Mainz), 2015-\t\nAdina Puesoek       (JGU Mainz, UC San Diego), 2012-\nNaiara Fernandez    (JGU Mainz), 2011-2014\nArthur Bauville     (JGU Mainz), 2015\nAndrea Piccolo      (JGU Mainz), 2015-\nBeatriz Montesinos  (JGU Mainz), 2015-\nMaximilian Kottwitz (JGU Mainz), 2019-\nArne Spang          (JGU Mainz), 2019-\nGarrett Ito          (University Hawaii), 2021-\nJana Schierjott     (University Hawaii), 2020-","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Older versions of LaMEM included a finite element solver as well,  and were developed by:","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Boris J.P. Kaus (ETH Zurich, Switzerland). 2007-2011\nDave A. May     (ETH Zurich, Switzerland). 2009-2011","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"Development work was supported by the European Research Council,  with ERC Starting Grant 258830, ERC Proof of Concept Grant 713397 and ERC Consolidator Grant 771143, as well as by BMBF projects SECURE and PERMEA awarded to Boris Kaus. ","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"LaMEM is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.","category":"page"},{"location":"man/Quickstart/","page":"Quick start","title":"Quick start","text":"You should have received a copy of the GNU General Public License along with LaMEM. If not, see http://www.gnu.org/licenses/.","category":"page"},{"location":"man/TempDiffusion/#3.5-Computing-the-initial-temperature-structure","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"","category":"section"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"Use the boundary conditions temp_top and temp_bot as well as init_temp to achieve a linear T-profile between top and bottom of your domain. Side boundary conditions are always flux-free.","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"temp_top    = 0\ntemp_bot    = 1250\ninit_temp   = 1","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"(Image: LinTemp)","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"To get a steady-state temperature distribution depending on the thermal properties of your materials, you need to specify the thermal parameters k and Cp for all materials and activate the act_steady_temp and act_temp_diff flag.","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"temp_top        = 0\ntemp_bot        = 1250\nact_steady_temp = 1\nact_temp_diff\t= 1\n...\n<MaterialStart>\n...\n# Thermal parameters\t\n\tk = 3\n\tCp = 1000\n<MaterialEnd>","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"(Image: SteadTemp)","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"To assign an independent temperature to a material (like an intruding magma body), set the thermal parameter T for this material.","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"temp_top        = 0\ntemp_bot        = 1250\nact_steady_temp = 1\nact_temp_diff\t= 1\n...\n<MaterialStart>\n...\n# Thermal parameters\t\n\tT = 980\n<MaterialEnd>","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"(Image: SteadMagTemp)","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"It is possible to allow for a certain amount of temperature diffusion between the anomalous material and its environment before the start of the forward model by using the steady_temp_dt parameter.","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"temp_top        = 0\ntemp_bot        = 1250\nact_steady_temp = 1\nact_temp_diff\t= 1\nsteady_temp_dt  = 0.1\n...\n<MaterialStart>\n...\n# Thermal parameters\t\n\tT = 980\n<MaterialEnd>","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"(Image: SteadMagDifTemp)","category":"page"},{"location":"man/TempDiffusion/","page":"3.5 Computing the initial temperature structure","title":"3.5 Computing the initial temperature structure","text":"The right slice shows the temperature distribution with additional diffusion, whereas the left slice shows it without.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"[TOC]","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2-Generating-a-model-setup-from-MATLAB/Octave","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In many cases, generating a model setup from within the LaMEM input file using build-in geometries is insufficient and we would like to have more control on what we are doing & create more complicated setups.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"One way to do this is to use a MATLAB/Octave script to generate the model setup. We have provided example files in /input_models/SubductionWithParticles/, as well as in some of the test directories.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Depending on whether your LaMEM simulation will run in parallel or not there are two different approaches: ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Create the full setup on one processor. For this, the matlab scripts should be placed in the same directory as the LaMEM (*.dat) input script. \nBy creating a parallel partitioning file which allows creating a parallel input file. With this method, every processor of a parallel LaMEM simulation only reads in the piece of the input geometry it needs. This method is scalable to very high resolutions, but requires you to run LaMEM first to create the partitioning file.   ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"If you start with a new setup/project, we recommend that you first generate the input file on one processor, and look at it using Paraview (approach 1). Once you are happy with it, you can proceed with approach 2.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Let's have a look at how these two approaches work, using the input files in /input_files/SubductionWithParticles as an example.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"The files in this directory create a setup for a subduction model with free slip and no temperature (first case) or with temperature-dependent properties (second example).","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.1.-Generate-the-input-on-a-single-processor","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.1. Generate the input on a single processor","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"The file CreateMarkers_Subduction_Linear_FreeSlip_parallel.m gives an example of how we can generate an input file on one processor.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"At the beginning we need to set the directories such that MATLAB/Octave knowns where the matlab scripts are that it needs:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"addpath('../../matlab')","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"This may have to be changed if you are in a different directory.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"To generate the setup on one processor, please make sure that the following flag is set to zero:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"LaMEM_Parallel_output  =    0;","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"You also need to specify the LaMEM input file with:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"LaMEM_input_file        =   'Subduction2D_FreeSlip_MATLABParticles_Linear_DirectSolver.dat';","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Once this is done, it reads the LaMEM input file to figure out the size of the computational domain, the number of elements employed in every direction as well as the number of particles in every direction. It also generates a 3D grid, which is all done with this function:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"[Grid,X,Y,Z,npart_x,npart_y,npart_z,W,L,H] =   LaMEM_ParseInputFile(LaMEM_input_file);","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"You can use the X,Y,Z grid later to create your input geometry. Within the MATLAB script, the following 3D arrays are created:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Phase : contains the phase or rock-type at every point in the grid \nTemp  : contains the temperature in degrees Celcius @ every point in the grid","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"After reading the dimensions of the grid, we use various ways to create the setup. ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In this specific example, we actually generate a polygon and use the command inpolygon to figure out which of the 3D points are located within the polygon to specify where the slab is.  At the end of the file, we save the markers to disk with","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"FDSTAGSaveMarkersParallelMatlab(A,Parallel_partition);","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"which will put the marker files in the directory /markers.  Within the LaMEM input file, you indicate that this directory should be used with","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"msetup          =   files            \nmark_load_file  =   ./markers/mdb     # marker input file (extension is .xxxxxxxx.dat)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Moreover, we also create a 3D output file VTK_ModelSetup_paraview_binary.vtr that we can open with Paraview:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"FDSTAGWriteMatlab2VTK(A,'BINARY'); % default option","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Doing that is useful as it allows you to build the setup without having to run the LaMEM model.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Once you are happy, you can run LaMEM on one processor with","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"../../bin/opt/LaMEM -ParamFile Subduction2D_FreeSlip_Particles_Linear_DirectSolver.dat","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Interested in how to do the same on >1 processor?  Keep on reading...","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.2.-Generating-parallel-input-using-partitioning-files","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.2. Generating parallel input using partitioning files","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Generating parallel input files involves 3 steps:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Create a ProcessorPartitioning file for a specific number of processors, which basically tells how LaMEM divides the computational box over the various processors.\nRun the MATLAB script that generates the input geometry file, using this ProcessorPartitioning file as input. In this case, you will have set the option LaMEM_Parallel_output = 1 in the MATLAV script.\nRun the LaMEM simulation in parallel, using the same number of processors as used to create the partitioning file.  ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In the following we will describe the 3 steps with an example. We will assume that you are happy with generating the setup on one processor (see above). The matlab example file we will be using is","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"/input_models/SubductionWithParticles/CreateMarkers_Subduction_Tdependent_FreeSurface_parallel.m","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.2.1-Create-the-partitioning-file","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.2.1 Create the partitioning file","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Make sure that you are in the correct directory:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"$ cd /input_models/SubductionWithParticles\n$ ls\nCreateMarkers_Subduction_Linear_FreeSlip_parallel.m                     Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat\nCreateMarkers_Subduction_Tdependent_FreeSurface_parallel.m              Subduction3D_FreeSlip_MATLABParticles_Linear_Multigrid.dat\nMakefile                                                                Tests\nREADME                                                                  p_poly_dist.m\nSubduction2D_FreeSlip_Particles_Linear_DirectSolver.dat","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"We will use the file Subduction2DFreeSurfaceMATLABParticlesNonlinearDirectSolver.dat as LaMEM file.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"First, run this file with LaMEM, but with the added command-line parameter -mode save_grid","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"$ mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat -mode save_grid","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"This will generate a processor partitioning file as follows:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"$ mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat -mode save_grid\n-------------------------------------------------------------------------- \n                   Lithosphere and Mantle Evolution Model                   \n     Compiled: Date: Oct 25 2020 - Time: 14:02:58           \n-------------------------------------------------------------------------- \n        STAGGERED-GRID FINITE DIFFERENCE CANONICAL IMPLEMENTATION           \n-------------------------------------------------------------------------- \nParsing input file : Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat \n   Adding PETSc option: -snes_ksp_ew\n   Adding PETSc option: -js_ksp_monitor\nFinished parsing input file : Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat \n--------------------------------------------------------------------------\nScaling parameters:\n   Temperature : 1000. [C/K] \n   Length      : 1000. [m] \n   Viscosity   : 1e+20 [Pa*s] \n   Stress      : 1e+09 [Pa] \n--------------------------------------------------------------------------\nGrid parameters:\n   Total number of cpu                  : 4 \n   Processor grid  [nx, ny, nz]         : [4, 1, 1]\n   Fine grid cells [nx, ny, nz]         : [256, 2, 64]\n   Number of cells                      :  32768\n   Number of faces                      :  115328\n   Maximum cell aspect ratio            :  1.17188\n   Lower coordinate bounds [bx, by, bz] : [-1500., -10., -660.]\n   Upper coordinate bounds [ex, ey, ez] : [1500., 10., 40.]\n--------------------------------------------------------------------------\nSaving processor partitioning ... done (0.000728846 sec)\n--------------------------------------------------------------------------","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"If you look again at the content of the directory, you will see that a new file is generated:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"$ ls\nCreateMarkers_Subduction_Linear_FreeSlip_parallel.m                     Subduction2D_FreeSlip_Particles_Linear_DirectSolver.dat\nCreateMarkers_Subduction_Tdependent_FreeSurface_parallel.m              Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat\nMakefile                                                                Subduction3D_FreeSlip_MATLABParticles_Linear_Multigrid.dat\nProcessorPartitioning_4cpu_4.1.1.bin                                    Tests\nREADME                                                                  p_poly_dist.m","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"ProcessorPartitioning_4cpu_4.1.1.bin is the processor partitioning file, which we need to indicate in the matlab/octave script. If you generate the file on a different number of processors, or use different box-sizes, the naming of the partitioning file will be different. Note that on linux, you can always get info about the date when a file was added with:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"$ ls -al Proc*\n-rw-r--r--  1 kausb  admin  2668 Oct 26 15:56 ProcessorPartitioning_4cpu_4.1.1.bin","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"This will allow you to see which partitioning file was added most recently.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.2.2-Run-the-MATLAB/Octave-script","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.2.2 Run the MATLAB/Octave script","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Next, open the file CreateMarkers_Subduction_Tdependent_FreeSurface_parallel.m and make sure that the following parameters are activated/set:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"LaMEM_Parallel_output   =    1;\nLaMEM_input_file        =   'Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat';\nParallel_partition      =   'ProcessorPartitioning_4cpu_4.1.1.bin'","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Once you run this file in MATLAB or Octave, it should give the following output:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":">> CreateMarkers_Subduction_Tdependent_FreeSurface_parallel\nCreating setup in parallel using LaMEM file: Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat\n\nParallel_partition =\n\n    'ProcessorPartitioning_4cpu_4.1.1.bin'\n\nWriting Appended data for binary output in Paraview ... \nWriting file -> ./markers/mdb.00000000.dat\nWriting file -> ./markers/mdb.00000001.dat\nWriting file -> ./markers/mdb.00000002.dat\nWriting file -> ./markers/mdb.00000003.dat","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"which shows that it created marker files for 4 processors.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"If you open the file VTK_ModelSetup_paraview_binary.vtr in Paraview, it should look like:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"(Image: FinalSetup)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Which is a subduction setup as in the example before, but this time with a halfspace cooling thermal age. ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.2.3-Perform-the-parallel-LaMEM-simulation","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.2.3 Perform the parallel LaMEM simulation","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Once you successfully created the marker files, you can run the LaMEM simulation in parallel with:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Please remember that you need to re-generate the partitioning file if you:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Change the number of elements in any of the directions\nChange the number of particles/element\nChange the dimensions of the grid (length, width, bottom, etc.)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"If you only change the internal geometry or, say, the temperature of the slab, you do not need to redo the partitioning file. Simply rerunning the matlab script is ok in that case. ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/#3.2.3.-Understanding-the-input-scripts","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2.3. Understanding the input scripts","text":"","category":"section"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"The MATLAB/Octave input scripts consists of several parts.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In the beginning you specify the filenames, whether the input should be in parallel or not and (if applicable) the name of the partitioning file (all in red): ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"(Image: Script_Part1)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In the next part, the user can do whatever to set the initial geometry. In this particular example, we create a 2D array that computes the distance of a point to the top of the slab. We also create a 2D polygon that described the slab but is set to NaN outside. ","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"(Image: Script_Part2)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"The following part first defines the Phase and Temp 3D arrays, and sets the phases based on the distance towards the top of the slab. We use a halfspace cooling temperature profile with a thermal age of 50 Myrs in this case.","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"(Image: Script_Part3)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"In other scripts you will always have to define and set the properties of these two 3D arrays in one way or the other (how you do it, is up to you).","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"Finally, we save the data to LaMEM marker files and write a VTK output file:","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"(Image: Script_Part4)","category":"page"},{"location":"man/GenerateModelSetup_MATLAB/","page":"3.2 Generating a model setup from MATLAB/Octave","title":"3.2 Generating a model setup from MATLAB/Octave","text":"This last part is the same for all scripts and should not be modified.","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"[TOC]","category":"page"},{"location":"man/Debugging/#7.-Debugging-LaMEM","page":"LaMEM Debugging","title":"7. Debugging LaMEM","text":"","category":"section"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"If you are only a user of LaMEM, any text-editor is sufficient to change the *.dat LaMEM input files. Yet, if you are planning to do some more serious code development, it is quite helpful to install a more professional debugging environment.   There is quite some discussion within the development team, what the best environment is to use. Boris and Tobias really like Microsoft Visual Studio Code, whereas Anton swears with Eclipse. The advantage of MVSC is that it is easy to setup and get running, but does not allow parallel debugging. Eclipse, on the other hand, does allow for parallel debugging but can be more tricky to get up and running with PETSc.","category":"page"},{"location":"man/Debugging/#7.1.-Microsoft-Visual-Studio-Code","page":"LaMEM Debugging","title":"7.1. Microsoft Visual Studio Code","text":"","category":"section"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"Microsoft Visual Studio Code is a recent and open-source development by Microsoft which has quickly become the number one development environment among professional programmers. It runs on Linux, Mac and windows and provides a very simple way to get debugging to work with PETSc. It also allows you to do development on a remote system almost as if it is on your local machine, which is pretty cool.","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"Here I will assume that PETSc, MPICH and LaMEM are installed in","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"$ /opt/mpich3/include\n$ /opt/petsc/petsc-3.18.6-deb/include/\n$ /local/home/boris/LaMEM/","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"which you obviously have to update for your system. ","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"If you want to do remote debugging on a linux machine, you should first install the Remote SSH plugin and login to the remote server (this obviously requires you to have ssh login data to that machine). On the remote machine go to the /LaMEM/src directory.","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"The first thing to do is to add a file called c_cpp_properties.json inside the (hidden) directory  localhomeborisLaMEMvscode with the following content:","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"{\n    \"configurations\": [\n        {\n            \"name\": \"MacBook arm64\",\n            \"includePath\": [\n                \"${workspaceFolder}/**\",\n                \"/opt/homebrew/include\",\n                \"/opt/petsc/petsc-3.18.6-deb/include/\"\n            ]\n        }\n    ],\n    \"version\": 4\n}","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"This will tell the code where PETSc, and will give you info about all the PETSc routines within LaMEM if you hover over a PETSc command such as CHKERRQ with your cursor.","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"If you want to debugging as well, you need to make sure that you have a working debugger installed (for example the GNU debugger gdb, or on the newer arm64 apple systems the lldb debugger). On an arm64 apple system you would need to install the C/C++ extension as well as the CodeLLDB extension. ","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"Once that is the case, you need to create a file called launchjson in the same hidden directory localhomeborisLaMEMvscode:","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"(lldb) Launch\",\n            \"type\": \"lldb\",\n            \"request\": \"launch\",\n            \"program\": \"/Users/kausb/WORK/LaMEM/LaMEM/bin/deb/LaMEM\",\n            \"args\": [\"-ParamFile\",\"FallingBlock_IterativeSolver.dat\",\"-nstep_max\",\"2\"],\n            \"stopOnEntry\": false,\n            \"cwd\": \"/Users/kausb/WORK/LaMEM/LaMEM/input_models/BuildInSetups/\",\n            \"env\": {\"PETSC_DEB\": \"/opt/petsc/petsc-3.18.6-deb\",\n                    \"PATH\": \"/opt/homebrew/bin:${env:PATH}\"},\n            \"preLaunchTask\": \"C/C++: build LaMEM deb file\",\n        },   \n    ]\n}","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"For this to work, we also need to create a task that runs make mode=deb all in LaMEMsrc before we start the debugger, to rebuild the code.  For this, you need to create a file tasks.json in .vscode:","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"{\n    \"tasks\": [\n        {\n            \"type\": \"cppbuild\",\n            \"label\": \"C/C++: build LaMEM deb file\",\n            \"command\": \"make\",\n            \"args\": [\n                \"mode=deb\",\"all\"\n            ],\n            \"options\": {\n                \"cwd\": \"/Users/kausb/WORK/LaMEM/LaMEM/src\",\n                \"env\": {\"PETSC_DEB\":  \"/opt/petsc/petsc-3.18.6-deb/\",\n                        \"PATH\": \"/opt/homebrew/bin:${env:PATH}\"}\n            },\n            \"problemMatcher\": [\n                \"$gcc\"\n            ],\n            \"group\": {\n                \"kind\": \"build\",\n                \"isDefault\": true\n            },\n            \"detail\": \"Task generated by Debugger.\"\n        },\n    ],\n    \"version\": \"2.0.0\"\n}","category":"page"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"After this, you should be able to run LaMEM with the debugger, and even step inside PETSc routines.","category":"page"},{"location":"man/Debugging/#7.2.-Eclipse","page":"LaMEM Debugging","title":"7.2. Eclipse","text":"","category":"section"},{"location":"man/Debugging/","page":"LaMEM Debugging","title":"LaMEM Debugging","text":"The Eclipse developing environment does allow you to parallel debug. We used to use this a lot, but please be aware that it is a bit tricky to set up. If you want more info about it, please have a look at LaMEM/doc.","category":"page"},{"location":"man/Home/#LaMEM-Userguide","page":"Home","title":"LaMEM Userguide","text":"","category":"section"},{"location":"man/Home/","page":"Home","title":"Home","text":"(Image: Getting Started)","category":"page"},{"location":"man/Home/","page":"Home","title":"Home","text":"LaMEM (Lithosphere and Mantle Evolution Model) is a software package to simulate 2D/3D geological and geomechanical processes, which runs on anything from your laptop to a massively parallel machine. It takes (poro)-visco-elasto-plastic rheologies into account, and can be used to simulate anything from the collision of tectonic plates to the flow of fluids through porous rocks. ","category":"page"},{"location":"man/Home/","page":"Home","title":"Home","text":"The purpose of this wiki is to get you started with installing and running LaMEM and give a few worked-out examples that explain how to run LaMEM on your local machine or cluster.","category":"page"},{"location":"man/Home/#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"man/Home/","page":"Home","title":"Home","text":"1. Installation \n2. Getting Started\n3. Initial Model Setup\n4. Examples\n5. Features\n6. LaMEM Development\n7. LaMEM Debugging","category":"page"},{"location":"man/Home/#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"man/Home/","page":"Home","title":"Home","text":"LaMEM contains a number of features, specifically tailored to simulate geological processes and complex geometries:","category":"page"},{"location":"man/Home/","page":"Home","title":"Home","text":"2D/3D parallel thermomechanical code for cartesian geometries\nBuild from the onset to run on MPI-parallel machines; the largest we tested had 458'752 processors\nSupport for both direct solvers and multigrid solvers\nMarker and cell approach to simulate complex geometries and large strains\nNewton solvers for nonlinear iterations \nMultiple ways to create model geometries:   (1) Build-in geometrical objects,  (2) MATLAB/Octave input files,   (3) GeomIO support to create 2D/3D input geometries from vector graphics,  (4) Voxel-based input (to compute effective permeabilities of porous rocks).\nMechanical solver for visco-elasto-plastic solvers, for both (thermo)-elastic bulk compressible and incompressible cases\nNonlinear combined rock creep laws and (regularized) non-associated plasticity\nInternal free surface and sticky air approach\nEnergy solver with shear heating\nFluid pressure and Darcy solver for groundwater flow\nPhase transitions, by taking (multiple) precomputed phase diagrams into account\nPartial melting\nSimplified erosion/sedimentation algorithms\nBreakpointing/restarting options\nAdjoint formulations to perform inversions and derive scaling laws ","category":"page"},{"location":"man/Home/#Getting-started","page":"Home","title":"Getting started","text":"","category":"section"},{"location":"man/Home/","page":"Home","title":"Home","text":"We recommend that your start with reading the installation instructions.","category":"page"},{"location":"man/Home/#Extending-this-userguide","page":"Home","title":"Extending this userguide","text":"","category":"section"},{"location":"man/Home/","page":"Home","title":"Home","text":"The userguide consists of Markdown pages which is compiled into webpages using the julia Documenter.jl package.   The pages are listed in the ","category":"page"},{"location":"man/Home/","page":"Home","title":"Home","text":"/docs","category":"page"},{"location":"man/Home/","page":"Home","title":"Home","text":"directory of this repository. You can extend it by adding new pages to the repository, which can be added to the side menu by modifying make.jl.  It will be automatically compiled when you push","category":"page"},{"location":"man/Physics/#Physics","page":"Physics","title":"Physics","text":"","category":"section"},{"location":"man/Physics/","page":"Physics","title":"Physics","text":"Physics\nWiki features\nSyntax highlighting\nEquations\nTables","category":"page"},{"location":"man/Physics/","page":"Physics","title":"Physics","text":"<!– toc –>","category":"page"},{"location":"man/CODE_OF_CONDUCT/#LaMEM-Code-of-Conduct","page":"Code of conduct","title":"LaMEM Code of Conduct","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/#Our-Pledge","page":"Code of conduct","title":"Our Pledge","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.","category":"page"},{"location":"man/CODE_OF_CONDUCT/#Our-Standards","page":"Code of conduct","title":"Our Standards","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Examples of behavior that contributes to creating a positive environment include:","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Using welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Examples of unacceptable behavior by participants include:","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"The use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others' private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting","category":"page"},{"location":"man/CODE_OF_CONDUCT/#Our-Responsibilities","page":"Code of conduct","title":"Our Responsibilities","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","category":"page"},{"location":"man/CODE_OF_CONDUCT/#Scope","page":"Code of conduct","title":"Scope","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","category":"page"},{"location":"man/CODE_OF_CONDUCT/#Enforcement","page":"Code of conduct","title":"Enforcement","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team:  LaMEM","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident.  Further details of specific enforcement policies may be posted separately.","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","category":"page"},{"location":"man/CODE_OF_CONDUCT/#Attribution","page":"Code of conduct","title":"Attribution","text":"","category":"section"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"[homepage]: https://www.contributor-covenant.org","category":"page"},{"location":"man/CODE_OF_CONDUCT/","page":"Code of conduct","title":"Code of conduct","text":"For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq","category":"page"},{"location":"man/PolygonGeometry/#3.3-Using-3D-setups-created-in-geomIO","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"","category":"section"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"Setups that were created in geomIO (https://bitbucket.org/geomio/geomio/src/master/) can easily be used as input geometries for LaMEM. If the options opt.getPolygons and opt.writePolygons are enabled in the geomIO file, a file named Polygons.bin will be created in the geomIO output directory.","category":"page"},{"location":"man/PolygonGeometry/#geomIO.m:","page":"3.3 Using 3D setups created in geomIO","title":"geomIO.m:","text":"","category":"section"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"% settings\ninputFile           = ['Simple.EW.svg'];\nopt                 = geomIO_Options();\nopt.inputDir        = ['./Input'];\nopt.outputDir       = ['./Output'];\nopt.inputFileName   = inputFile;\nopt.LaMEMinputFileName ='Simple.dat';\nopt.readLaMEM       = true;\nopt.writeParaview   = true;\nopt.writePolygons   = true;\nopt.interp = true;\nopt.zi = [0:5:200];\nopt.getPolygons= true;\nopt.gravity.lenUnit = 'm';\n\n% Density assignment\npaths = {\n    'Air', 0, 0\n    'Sediments', 2500, 1\n    'Crust', 2700, 2\n    'Magma', 2400, 3\n     };\nopt.pathNames       = {paths{:,1}}; \nopt.gravity.drho    = [paths{:,2}]; \nopt.phase           = [paths{:,3}];\n\n% Run geomIO\n[PathCoord,Volumes,opt] = run_geomIO(opt,'default');","category":"page"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"Note that the polygon file depends on the number of elements and markers in each directions, so it is wise to label them accordingly. Also Note that the polygons in the .svg file should overlap to avoid voids in the geometry. They will later overwrite each other in the order specified in geomIO.m.","category":"page"},{"location":"man/PolygonGeometry/#Simple.dat:","page":"3.3 Using 3D setups created in geomIO","title":"Simple.dat:","text":"","category":"section"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"In the LaMEM input file, set:","category":"page"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"msetup      =\tpolygons\npoly_file   =\t./Output/Simple_32x32x32.bin","category":"page"},{"location":"man/PolygonGeometry/","page":"3.3 Using 3D setups created in geomIO","title":"3.3 Using 3D setups created in geomIO","text":"(Image: PhaseFromPoly)","category":"page"},{"location":"man/Example_1_Subduction2D/#4.1-2D-subduction-setup-with-nonlinear-rheologies","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"","category":"section"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"This is a worked-out example of how to create a 2D subduction setup with temperature dependent rheology.","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"The example input file can be found under:","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"/input_models/SubductionWithParticles/Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"whereas the MATLAB/Octave file is here:","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"/input_models/SubductionWithParticles/CreateMarkers_Subduction_Tdependent_FreeSurface_parallel.m","category":"page"},{"location":"man/Example_1_Subduction2D/#4.1.1-Input-model-geometry","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1.1 Input model geometry","text":"","category":"section"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"We start with having a look at the input file. With Visual Studio Code this can be done with","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"$ code Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"***Units*** At the beginning of the script, we specify the units","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"#===============================================================================\n# Scaling\n#===============================================================================\n\n\tunits            = geo\t\t# geological units \n\t\n\tunit_temperature = 1000\n\tunit_length      = 1e3\n\tunit_viscosity   = 1e20\n\tunit_stress      = 1e9","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"Internally, LaMEM computes everything in non-dimensional units in order to preent round-off (numerical) errors. In order to transfer things from dimensional to non-dimensional units you need to specify these values. LaMEM has 3 modes for units","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"units = none\nunits = SI\nunits = geo","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"as you can imagine, the first implies that all input is in non-dimensional units, the second that all is given in SI units. The third, and the one that is most typically used, employs geodynamically sensible units, such as temperature in celcius, length scales in kilometers, times in million years, etc.","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"The units that you define here are in SI-units, which implies that the typical lengthscale is 1000 meters, and the typical stress is 10^9 Pa.","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"***Model domain*** The model domain and numerical reoslution are specified here:","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"#===============================================================================\n# Grid & discretization parameters\n#===============================================================================\n\n# Number of cells for all segments\n\tnel_x = 256\n\tnel_y = 2\n\tnel_z = 64\n\n# Coordinates of all segments (including start and end points)\n\n\tcoord_x = -1500 1500\n\tcoord_y = -10   10\n\tcoord_z = -660  40","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"Note that LaMEM is a fully 3D code; there is no pure-2D part. Yet you can nevertheless do 2D simulations by selecting only 1 or 2 cells in the y-direction as done above. If you select multigrid as a solver, you need to have at least 2 cells here. Note that for 2D, the 'thin' direction should always be the y-direction.","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"The remaining part of this block defines the number of elements in each direction and the left/right, front/back and bottom/top coordinates (in km, as we use geo units).","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"Also note that you can always specify parameters on the command-line, that will overrule whatever is written in the input file.  For example: ","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"../../bin/LaMEM -ParamFile Subduction2D_FreeSurface_MATLABParticles_Nonlinear_DirectSolver.dat -nel_x 64 -nel_z 16","category":"page"},{"location":"man/Example_1_Subduction2D/","page":"4.1 2D subduction setup with nonlinear rheologies","title":"4.1 2D subduction setup with nonlinear rheologies","text":"will perform a simulation with 64 by 2 by 16 elements instead.","category":"page"},{"location":"man/BuildinGeometries/#Build-in-geometrical-objects-in-LaMEM","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"One way to generate an input geometry is to use the build-in geometrical objects in LaMEM.  These geometries are used if the option ","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"msetup = geom","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"is specified in the input file.","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"A number of geometric primitives exists within LaMEM, and can be combined, with the ones further down in the input scripts overwriting earlier ones. This allows you, for example, to first set a halfspace cooling temperature for the lithosphere and afterwards defined the crust, mantle lithosphere etc.","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"The following objects are available:","category":"page"},{"location":"man/BuildinGeometries/#Sphere","page":"Build-in geometrical objects in LaMEM","title":"Sphere","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"Specifying a sphere comes with the following options:","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<SphereStart>\n    phase       = 1\n    radius      = 1.5\n    center      = 1.0 2.0 3.0\n    \n    Temperature = constant # optional: Temperature of the sphere. possibilities: [constant]\n    cstTemp     = 1000     # required in case of [constant]: temperature value [in Celcius in case of GEO units]\n<SphereEnd>","category":"page"},{"location":"man/BuildinGeometries/#Layer","page":"Build-in geometrical objects in LaMEM","title":"Layer","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"Allows you to specify a horizontal layer in the model","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<LayerStart>\n    phase       = 1\n    top         = 5.0\n    bottom      = 3.0\n    \n    # optional: sinusoidal perturbations\n    cosine      = 0         # optional: add a cosine perturbation on top of the interface (if 1)\n    wavelength  = 1         # required if cosine: wavelength in x-direction\n    amplitude   = 0.1       # required if cosine: amplitude of perturbation         \n\t\n    # optional: temperature structure\n    Temperature = halfspace # optional: Temperature structure. possibilities: [constant, linear, halfspace]\n    cstTemp     = 1000      # required in case of [constant]: temperature value [in Celcius in case of GEO units]\n    topTemp     = 0         # required in case of [linear,halfspace]: temperature @ top [in Celcius in case of GEO units]\n    botTemp     = 1300      # required in case of [linear,halfspace]: temperature @ bottom [in Celcius in case of GEO units]\n    thermalAge  = 70        # required in case of [halfspace]: thermal age of lithosphere [in Myrs if GEO units are used]\n<LayerEnd>","category":"page"},{"location":"man/BuildinGeometries/#Box","page":"Build-in geometrical objects in LaMEM","title":"Box","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"Allows you to define a square box:","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<BoxStart>\n    phase       =   1\t\t    # required; phase of box\n    bounds      =   0 1 0 1 0 1\t# required: left right front back bottom top \n\n    Temperature =   linear      # optional: Temperature structure. possibilities: [constant, linear, halfspace]\n    cstTemp     =   1000        # required in case of [constant]: temperature value [in Celcius in case of GEO units]\n    topTemp     =   0           # required in case of [linear,halfspace]: temperature @ top [in Celcius in case of GEO units]\n    botTemp     =   1300        # required in case of [linear,halfspace]: temperature @ bottom [in Celcius in case of GEO units]\n    thermalAge  =   70          # required in case of [halfspace]: thermal age of lithosphere [in Myrs if GEO units are used]\n<BoxEnd>","category":"page"},{"location":"man/BuildinGeometries/#Hexahedral","page":"Build-in geometrical objects in LaMEM","title":"Hexahedral","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"Allows you to define a hexahedral object (which requires you to specify 8 edge points), in the following order:","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"(Image: HexNumbering)","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<HexStart>\n    phase   = 1             # required; phase of box\n    \n    # required: coordinates of the 8 edge points \n    coord   = 0.75 0.75 0.75   0.9 0.75 0.75   0.9 0.9 0.75   0.75 0.9 0.75   0.75 0.75 0.9   0.9 0.75 0.9   0.9 0.9 0.9   0.75 0.9 0.9  \t\n<HexEnd>","category":"page"},{"location":"man/BuildinGeometries/#Cylinder","page":"Build-in geometrical objects in LaMEM","title":"Cylinder","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"Allows you to insert a cylinder-like object:","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<CylinderStart>\n    phase       = 1             # required; phase of box\n    radius      = 0.3           # required: radius of cylinder\n    bottom      = 0.1           # required: z-coordinate of bottom of the layer\n    base        = 0.1 0.1 0.1   # required: (x,y,z)-coordinate of point at base of cylinder\n    cap         = 0.1 0.1 0.8   # required: (x,y,z)-coordinate of point at cap of cylinder\n\n    Temperature = constant      # optional: Temperature of the sphere. possibilities: [constant]\n    cstTemp     = 1000          # required in case of [constant]: temperature value [in Celcius in case of GEO units]\n<CylinderEnd>","category":"page"},{"location":"man/BuildinGeometries/#Ellipsoid","page":"Build-in geometrical objects in LaMEM","title":"Ellipsoid","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"<EllipsoidStart>\n    phase       = 1\n    axes        = 2.0 1.5 1.0  # semi-axes of ellipsoid in x, y and z\n    center      = 1.0 2.0 3.0\n    \n    Temperature = constant     # optional: Temperature of the sphere. possibilities: [constant]\n    cstTemp     = 1000         # required in case of [constant]: temperature value [in Celcius in case of GEO units]\n<EllipsoidEnd>","category":"page"},{"location":"man/BuildinGeometries/#Pro-and-contra-of-using-this-to-create-input-geometries","page":"Build-in geometrical objects in LaMEM","title":"Pro and contra of using this to create input geometries","text":"","category":"section"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"One of the advantages of this way of creating a LaMEM input file is that it sets the input geometry in the same file as all other options. An additional advantage is that you don't have to recreate the input geometry of the model if you change the resolution or the number of particles/cell.  ","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"One of the disadvantages is that it is sometimes more tedious to create the geometry, in  particular if you have complicated setups in which you employ data from other sources (say Moho map).","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"For these reasons, additional methods exists to generate input geometries: ","category":"page"},{"location":"man/BuildinGeometries/","page":"Build-in geometrical objects in LaMEM","title":"Build-in geometrical objects in LaMEM","text":"By directly setting the properties of the markers with MATLAB/Octave scripts.\nBy using geomIO to create model setups ","category":"page"},{"location":"man/GettingStarted/#2.-Getting-started","page":"Getting Started","title":"2. Getting started","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Now that PETSc is installed and LaMEM compiled, it is time to do your first simulation.  We will look at the sinking of a few high-density spheres in a lower density fluid, followed by a few examples of more complicated setups.","category":"page"},{"location":"man/GettingStarted/#2.1-Running-the-first-simulation","page":"Getting Started","title":"2.1 Running the first simulation","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"First, switch to the correct directory:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"$ cd /input_models/BuildInSetups","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"after which you can run the simulation with the optimized version of LaMEM as follows:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"$ mpiexec -n 1 ../../bin/opt/LaMEM -ParamFile FallingSpheres_Multigrid.dat","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The model output should look like this:  (Image: FallingSpheres_start) and finish with:  (Image: FallingSpheres_start)","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"After the simulation, you will two new *.pvd files in the directory, and two additional directories that contain info about the timesteps:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Spheres_multigrid.pvd\nSpheres_multigrid_phase.pvd\nTimestep_00000000_0.00000000e+00\nTimestep_00000001_1.10000000e+01","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Running the simulation in parallel is done with: ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"$ mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile FallingSpheres_Multigrid.dat","category":"page"},{"location":"man/GettingStarted/#2.2-Visualizing-results","page":"Getting Started","title":"2.2 Visualizing results","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The LaMEM output produces VTK-files. We usually use Paraview to visualize those. Open the file in paraview and open the file Spheres_multigrid.pvd.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The result looks like this  (Image: FallingSpheres_paraview) In order to produce this picture, we used the \"Slice\", \"Glyph\" and \"Contour\" tools (everything you need is circled in red).","category":"page"},{"location":"man/GettingStarted/#2.3-Changing-input-parameters","page":"Getting Started","title":"2.3 Changing input parameters","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Let's change a few input parameters and have a look at the LaMEM input file. Open it FallingSpheres_Multigrid.dat with a text editor and have a look at it. ","category":"page"},{"location":"man/GettingStarted/#2.3.1-Running-the-simulation-for-longer","page":"Getting Started","title":"2.3.1 Running the simulation for longer","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Changing the number of timesteps is done with the parameter nstep_out. There are two ways to run the simulation for longer","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Change the parameter in the input file, save it and rerun the simulation","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"nstep_out = 19     # save output every n steps","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Add the parameter -nstep_out 19 to the command-line and run the simulation with:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"$ mpiexec -n 4 ../../bin/opt/LaMEM -ParamFile FallingSpheres_Multigrid.dat -nstep_out 19","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"In fact, most input parameters in the LaMEM input file can be set from the command-line as well.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Note that simulations run either until the number of requires timesteps are reached, or until the computed time becomes larger than time_end.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"After the simulation finishes, you can copy the timesteps and the *.pvd files to your local computer and reload the Spheres_multigrid.pvd files within Paraview (File -> Reload Files). Animate all timesteps with the green play button. At the end of the simulation, it'll look like:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"(Image: FallingSpheres_paraview_end)","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Hint on using Paraview: If you create a visualization in Paraview, you can safe it as a \"Statefile\", using File->Save State. For the next simulation, you can load this with File->Load State and choose the directory where the input files are. That save quite a bit of work and allows you to make reproducable figures.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Hint on visualizating LaMEM simulations: You don't have to wait until a LaMEM simulation is finished. The *.pvd files are continuously updated, so make sure to copy over these files as well as all timestep directories and hit \"Reload\".","category":"page"},{"location":"man/GettingStarted/#2.3.2-Changing-the-material-properties-of-the-spheres","page":"Getting Started","title":"2.3.2 Changing the material properties of the spheres","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Next, let's change the viscosity of the spheres. For this, scroll towards the end of the input file until the following section:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"#===============================================================================\n# Material phase parameters\n#===============================================================================\n\n\t# Define properties of matrix\n\t<MaterialStart>\n\t\tID  = 0 # phase id\n\t\trho = 1 # density\n\t\teta = 1 # viscosity\n\t<MaterialEnd>\n\n\t# Define properties of spheres\n\t<MaterialStart>\n\t\tID  = 1   # phase id\n\t\trho = 2   # density\n\t\teta = 1000 # viscosity\n\t<MaterialEnd>","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"In this simulation, the matrix has Phase ID=0 and the spheres have ID=1. Obviously, the matrix has viscosity and density both equal to 1 and the spheres have a higher viscosity (1000) and higher density (2).   You can change the viscosity of the spheres by changing the according numbers in the input file and rerunning the simulation.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Note: This particular simulation is performed in non-dimensional units, as units = none in the parameter-file. LaMEM can also use units=si or units=geo, where the last one is most convenient if performing geodynamic simualtions (as length scales are in km, and timescales in Myrs). Later in the tutorial you will learn more about this.","category":"page"},{"location":"man/GettingStarted/#2.4-Exercises","page":"Getting Started","title":"2.4 Exercises","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"If you are a new user of LaMEM, the best way for you to get familiar with the code is to do a few exercises. The ones below will also give you a bit of info about LaMEM along the way. All exercises employ the build-in geometry options of LaMEM (implying that the input model geometry is constructed with geometrical objects that are specified in the input file). All input files we will discuss are in the directory /input_files/BuildInSetups.","category":"page"},{"location":"man/GettingStarted/#2.4.1-Exercise-A:-Falling-Block","page":"Getting Started","title":"2.4.1 Exercise A: Falling Block","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Run the Falling Block direct test from the build in setups (/BuildInSetups/FallingBlock_DirectSolver.dat) and inspect the input file with a text editor to get a feeling for the parameters that are specified there. ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"This example uses a socalled direct solver, which the recommended method for 2D setups as it is more robust in cases with large viscosity contrasts. Yet, it is too slow for large 3D simulations, which will require \"multigrid\" solvers (that unfortunately don't work always very well with large viscosity contrasts and require somewhat more tuning and expertise). PETSc itself does not have build-in parallel direct solvers, but you can install PETSc with SUPERLU_DIST and MUMPS which are two packages that. LaMEM automatically uses those if they are available.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Once the simulation is finished, it should give a setup that is fairly similar to the falling spheres discussed above, but with a square block.","category":"page"},{"location":"man/GettingStarted/#2.4.2-Exercise-B:-Falling-Block-different-blocks","page":"Getting Started","title":"2.4.2 Exercise B: Falling Block + different blocks","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Change the input file (and save it under a new name, to not confuse GIT later) to include the following features:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Use a smaller block (0.2 in size in each of the directions). \nInclude a total of 3 blocks, centered around (0.8,0.8,0.8), (0.3,0.3,0.3), and (0.1, 0.3, 0.8) which refer to the (x,y,z) coordinates, respectively.\nGive the 3 blocks a density of 5 and a viscosity of 10.\nRun the simulation for 20 timesteps. ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Try to reproduce this; the result should look like this:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"(Image: GettingStarted_Exercise2_FallingBlocks)","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Note that in this visualiation, the blocks look a bit rounded as the resolution of the simulation was quite low.","category":"page"},{"location":"man/GettingStarted/#2.4.3-Exercise-C:-Falling-Block-multigrid","page":"Getting Started","title":"2.4.3 Exercise C: Falling Block + multigrid","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The direct solver, we used sofar, is fine for low resolutions but not for higher ones. For those, you will want to use a multigrid solver instead. In LaMEM, this can be done by specifying solver = multigrid in the input file. Run the Falling block multigrid test by running /BuildInSetups/FallingBlock_Multigrid.dat. ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The section in the input file that deals with this is:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"#===============================================================================\n# Solver options\n#===============================================================================\n\tSolverType \t\t\t=\tmultigrid  \t# solver [direct or multigrid]\n\tMGLevels \t\t\t=\t4\t\t\t# number of MG levels [default=3]\n\tMGSweeps \t\t\t=\t10\t\t\t# number of MG smoothening steps per level [default=10]\n\tMGSmoother \t\t\t=\tchebyshev \t# type of smoothener used [chebyshev or jacobi]\n\tMGCoarseSolver \t\t=\tmumps \t\t# coarse grid solver [direct/mumps/superlu_dist or redundant - more options specifiable through the command-line options -crs_ksp_type & -crs_pc_type]","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"And LaMEM will print the following statements","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Preconditioner parameters:\n   Matrix type                   : monolithic\n   Preconditioner type           : coupled Galerkin geometric multigrid\n   Global coarse grid [nx,ny,nz] : [4, 4, 4]\n   Local coarse grid  [nx,ny,nz] : [4, 2, 2]\n   Number of multigrid levels    :  4","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"What this states is that we use 4 levels of multgrid. Our finest resolution is given by the nel_x, nel_y, nel_z at the beginning of the file (32,32,32 in this example). The next coarser grid will be (16,16,16), followed by (8,8,8) and the coarsest resolution is (4,4,4). Multigrid solves the governing equations at these different grids, and uses a direct solver (e.g., MUMPS) on the coarsest grid. Unfortunately, it is slightly more tricky to set up and use, and you will have to experiment a bit with the number of smoothening steps used at every level and the number of multigid levels that you employ. ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"What is important in typical geodynamic simulations is that the coarse grid should be able to \"feel\" the viscosity structure, so having an extremely coarse grid doesn't work all that well. If your coarse grid is too large, on the other hand, the coarse grid solution will start dominating the computational time, which is also not what you want. Experimenting with this is thus important for real setups. ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Hint: You can add the command-line option -log_view to get a detailed overview of your simulation, and the time spend on each of the levels. This will be shown at the end of the simulatiom. If you wish, you can only run the simulation for a few timesteps by adding the command-line option -nstep_max 5.","category":"page"},{"location":"man/GettingStarted/#2.4.4-Exercise-D:-2D-subduction","page":"Getting Started","title":"2.4.4 Exercise D: 2D subduction","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The previous exercises were all performed for a non-dimensional setup. Yet, in most geoscience applications it is useful to have your input in units of kilometers, degrees Celcius, stresses in MPa, etc. For this reason, LaMEM has the geo input units.  Let's do a subduction simulation to have a look at this, using a 2D example. As the current version of LaMEM 3D-only, we simulate 2D cases by having 2 elements in the y-direction.  ","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"For this, run the dimensional subduction test setup that uses build-in geometries which is called /BuildInSetups/Subduction2D_FreeSlip_Direct.dat. This simulation is a simple viscous subduction setup, with a free slip upper boundary and a plastic crust (such that the plate detaches from the top boundary). The simulation will take a bit longer than some of the previous simulations, but look approximately like this:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"(Image: GettingStarted_2D_Subduction_FreeSlip)","category":"page"},{"location":"man/GettingStarted/#2.4.5-Exercise-E:-2D-subduction-free-surface","page":"Getting Started","title":"2.4.5 Exercise E: 2D subduction + free surface","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"The file Subduction2D_FreeSurface_DirectSolver.dat is an example of a 2D subduction model with a free surface. Note that in that case, also a paraview file is created that shows the internal free surface (open the file Subduction2D_FreeSurface_direct_surf.pvd to see that). The result should look like:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"(Image: GettingStarted_2D_Subduction_FreeSurface)","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Note that we used \"threshold\" in paraview to remove the air layer from the simulation.","category":"page"},{"location":"man/GettingStarted/#2.4.6-Exercise-F:-2D-rifting","page":"Getting Started","title":"2.4.6 Exercise F: 2D rifting","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"As a next step, we perform a simulation of a 2D rift that forms an asymmetric fault zone/core complex. The setup consists of a lower crust, an upper crust and a sticky air layer to simulate the free surface (represented by an internal free surface).","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"In this case we have a slightly more complicated setup and use a multigrid solver in a 2D setting. In order to run this example use the file /BuildInSetups/Rifting2D_MultigridSolver.dat.","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"New compared to previous cases is that we:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Employ elasticity (by specifying an elastic shear module in the input file)\nStrain soften the friction angle","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"Depending on the viscosity of the lower crust, you can either get a symmetric or an asymmetric rift. The default simulation will look like this after 25 timesteps:","category":"page"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"(Image: GettingStarted_2D_Rifting)","category":"page"},{"location":"man/GettingStarted/#2.4.5-Exercise-G:-3D-subduction","page":"Getting Started","title":"2.4.5 Exercise G: 3D subduction","text":"","category":"section"},{"location":"man/GettingStarted/","page":"Getting Started","title":"Getting Started","text":"For this simulation, it is handy to have a somewhat larger computer that you can use. The input script is called Subduction3D_DoubleSubduction_FreeSlip_Multigrid.dat","category":"page"},{"location":"man/TempInputFile/#3.4-How-to-use-a-temperature-input-file","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"","category":"section"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"A temperature input file can be used to introduce a custom temperature field at the start of the simulation. The file can be created in Matlab as a 3D matrix for convenience. The matrix is expected to cover the entire model (not more and not less). The size of the matrix does not matter but if you want to assign a temperature to a certain body, it is recommended to fit the marker resolution.","category":"page"},{"location":"man/TempInputFile/#Setting-up-the-file-with-Matlab","page":"3.4 How to use a temperature input file","title":"Setting up the file with Matlab","text":"","category":"section"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"%% Setup temperature\n% get bounds of LaMEM box\nx_box       = opt.setup.coord_x;\ny_box       = opt.setup.coord_y;\nz_box       = opt.setup.coord_z;\n\n% fit marker distribution\nnx  = length(opt.setup.marker_x);\nny  = length(opt.setup.marker_y);\nnz  = length(opt.setup.marker_z);\n\n% initialize matrix\nT3D = zeros(nx,ny,nz);\n\n% set up coordinate grid (for assigning specific temperatures based on coordinates)\ndx      = (x_box(2)-x_box(1))/nx;\ndy      = (y_box(2)-y_box(1))/ny; \ndz      = (z_box(2)-z_box(1))/nz;\nx_vec   = (x_box(1)+dx/2:dx:x_box(2)-dx/2);\ny_vec   = (y_box(1)+dy/2:dy:y_box(2)-dy/2);\nz_vec   = (z_box(1)+dz/2:dz:z_box(2)-dz/2);\n% DO NOT USE MESHGRID HERE!\n[X,Y,Z] = ndgrid(x_vec,y_vec,z_vec);\n\n%% setup linear Temperature profile starting at the surface\nz_surf      = 3;\ngradient    = 30;      % [K/km]\nzeros(nz,1);\nind_surf    = find(z_vec < z_surf);\nT_vec       = zeros(nz,1);\nT_vec(ind_surf)     = (z_surf - z_vec(ind_surf)) * gradient;\n\nfor i = 1 : nz\n    T3D(:,:,i) = T_vec(i);\nend\n\n%% assign Temperature to volume\nvol     = Volumes.Magma;\nT_vol   = 1180;\n\n% run through all depths\nfor k = 1 : nz\n    depth   = z_vec(k);\n    Slices  = {};\n    % find slices at that depth\n    for s = 1 : length(vol.Polygons)\n        if vol.Polygons{s}(1,3) <= depth + dz/10 && vol.Polygons{s}(1,3) >= depth - dz/10\n            Slices = [Slices; vol.Polygons{s}];\n        end\n    end\n    \n    % if slices of the body exist at that depth\n    if ~isempty(Slices)\n        allInds = false(nx,ny);\n        % add all markers that lie inside the body\n        for s = 1 : length(Slices)\n            inds = inpolygon(X(:,:,k),Y(:,:,k),Slices{s}(:,1),Slices{s}(:,2));\n            allInds = allInds | inds;\n        end\n        % assign the markers a temperature\n        T_Slice             = squeeze(T3D(:,:,k));\n        T_Slice(allInds)    = T_vol; \n        T3D(:,:,k) = T_Slice;\n    end\n    \nend\n\n%% write binary to be read by LaMEM\n%(Filename,[# of points in x-dir, # of points in y-dir, # of points in z-dir, Temp-Matrix in vector form])\npetscBinaryWrite('T3D.dat',[nx;ny;nz;T3D(:)]);","category":"page"},{"location":"man/TempInputFile/#Loading-file-in-LaMEM","page":"3.4 How to use a temperature input file","title":"Loading file in LaMEM","text":"","category":"section"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"In the LaMEM input file, set:","category":"page"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"temp_file\t= ./T3D.dat","category":"page"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"Options init_temp and act_steady_temp need to be disabled","category":"page"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"init_temp       = 0\nact_steady_temp = 0","category":"page"},{"location":"man/TempInputFile/","page":"3.4 How to use a temperature input file","title":"3.4 How to use a temperature input file","text":"(Image: TempFromFile)","category":"page"},{"location":"man/TopoFile/#3.6-How-to-use-a-topography-input-file","page":"3.6 How to use a topography input file","title":"3.6 How to use a topography input file","text":"","category":"section"},{"location":"man/TopoFile/","page":"3.6 How to use a topography input file","title":"3.6 How to use a topography input file","text":"A topography file can be used to introduce an initial topography into a LaMEM model. This can be set up as a 2D matrix in Matlab. The matrix has to cover the entire LaMEM box, or can be bigger. The number of points in the matrix does not matter but it's dimensions have to be included in the file as well as the coordinate of the SW corner and the gridspacing. Make sure that the units fit the LaMEM length unit (km for geo units, m for SI units).","category":"page"},{"location":"man/TopoFile/","page":"3.6 How to use a topography input file","title":"3.6 How to use a topography input file","text":"%% Setup topography\n\n% import your topography data\n% Create example data:\nTopo        = peaks(301);\nTopo        = Topo/4;\nEasting     = (0:1:300);\nNorthing    = (0:1:300);\n\n% For orientation\n% Topo(1,1):     SW\n% Topo(1,end):   SE\n% Topo(end,1):   NW\n% Topo(end,end): NE\n\n% compute grid spacing\ndx = (max(Easting) - min(Easting))/(length(Easting)-1);\ndy = (max(Northing) - min(Northing))/(length(Northing)-1);\n\n% possibly add offset in data\nEasting     = Easting - 200;\nNorthing    = Northing -100;\n\n% transpose Topo to be read correctly by LaMEM\nTopo    = Topo';\n\n% write binary to be read by LaMEM\n% (FILENAME,[# of points in x-dir, # of points in y-dir, x-coord of SW corner, y_coord of SW corner,\n% grid spacing in x-dir, grid spacing in y-dir, TopoMatrix in vector form])\npetscBinaryWrite('Topo.dat', [size(Topo,1); size(Topo,2); min(Easting);min(Northing); dx; dy; Topo(:)]);","category":"page"},{"location":"man/TopoFile/","page":"3.6 How to use a topography input file","title":"3.6 How to use a topography input file","text":"(Image: TopoFromFile)","category":"page"},{"location":"man/Examples/#4.-Examples","page":"4. Examples","title":"4. Examples","text":"","category":"section"},{"location":"man/Examples/","page":"4. Examples","title":"4. Examples","text":"Here, we list a number of worked-out examples that will teach you various aspects of using LaMEM.  Note that many of the examples with build-in geometry have already been discussed under Getting Started.","category":"page"},{"location":"man/Examples/","page":"4. Examples","title":"4. Examples","text":"4.1 2D subduction setup with nonlinear rheologies","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"[TOC]","category":"page"},{"location":"man/LaMEM_Development/#6.-LaMEM-Development-Guide","page":"LaMEM Development","title":"6. LaMEM Development Guide","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"In general, we try to follow much of the guidelines that PETSc has in place, even when we are somewhat less strict on some topics. Please have a look here, for more detailed info. ","category":"page"},{"location":"man/LaMEM_Development/#6.1-Integration-branches","page":"LaMEM Development","title":"6.1 Integration branches","text":"","category":"section"},{"location":"man/LaMEM_Development/#6.1.1-master","page":"LaMEM Development","title":"6.1.1 master","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"The master branch contains all features and bug fixes that are believed to be stable. New feature branches should start from master. Note that we do not have LaMEM release versions yet, but will introduce them once we find time to come up with a more decent documentation of LaMEM.","category":"page"},{"location":"man/LaMEM_Development/#6.2-Adding-new-features-to-LaMEM-using-git","page":"LaMEM Development","title":"6.2 Adding new features to LaMEM using git","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Most external users of LaMEM do not have writing access rights to LaMEM, to prevent mistakes from happening. Yet you can still contribute code in a rather straightforward manner, by using forking. An overall description of  what forking does is given here.  Below, we give specific instructions.","category":"page"},{"location":"man/LaMEM_Development/#6.2.1.-Fork-LaMEM","page":"LaMEM Development","title":"6.2.1. Fork LaMEM","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"What forking does is create a copy of LaMEM within your own GitHub account on which you can do your own work, create branches etc. (or also give other access if you wish). Once you are ready to push a local branch back to LaMEM master, you can create a pull request.","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"In order to fork, please follow the following steps:","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Login to your GitHub account and go from there to the LaMEM repository https://github.com/UniMainzGeo/LaMEM\nClick on the Fork button in the toolbar. You can make this repo private or public.\nNext, you clone LaMEM from your own repository to your local directory. The easiest way to do this is via the webpage where you go to Clone and copy the clone command. Next go to your terminal and type this\ngit clone https://github.com/<username>/LaMEM.git ./LaMEM\nwhere <username> should be your GitHub username (or copy the command from the web interface).\nChange to the directory: cd ./LaMEM \nLink the open-source main version of LaMEM (also called upstream version) with your local copy of it by typing on the command-line\ngit remote add upstream https://github.com/UniMainzGeo/LaMEM.git\nYou can now always get the latest changes of the main version of LaMEM into your local copy by typing\ngit pull upstream master   ","category":"page"},{"location":"man/LaMEM_Development/#6.2.1-Starting-and-working-on-a-new-feature","page":"LaMEM Development","title":"6.2.1 Starting and working on a new feature","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"If you want to introduce a new feature to the code, you should always create a new branch for that.","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"The workflow is as follows:","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Make sure you start from your local master by going to your local directory and typing \ngit checkout master\nAlternatively, you can also push a button in the GUI (which is what we tend to do). Many of us use SourceTree which is provided by Atlassian.\nDownload the main changes of LaMEM into your own copy of the code\ngit pull upstream master\nCreate and switch to a new feature branch:\n git checkout -b <loginname>/<goal>-<short-description>\nhere goal should be either bugfix or feature to clarify whether it is to fix a bug or to add a new feature to the code.\nFor example, the new feature branch of Andrea on passive tracers should be called\ngit checkout -b andrea_piccolo/feature-passive_tracers \nUse all lowercase.\nWrite code\nInspect changes: \ngit status\nor use one of the GUI's to do this \nRegularly commit code:\nCommit all files changed: git commit -a or\nCommit selected files: git commit file1 file2 file1 or\nAdd new files to be committed:git add file1 file2 followed by git commit. Modified files can be added to a commit in the same way.\nThe same can ofcourse be done through the GUI.\nIt is important to do this frequently and add useful commit messages as \nPush the feature branch from your local harddisk to your online bibucket account, such that others (with access) can see it: git push -u origin andrea_piccolo/feature-passive_tracers","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"(or equivalently, git push --set-upstream origin andrea_piccolo/feature-passive_tracers). Note that this step will still be in your own fork of LaMEM, and not in the main version of LaMEM.s","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"On a regular basis: merge master back into your feature or bugfix branch. This is easiest done with SourceTree. On a regular basis you should also pull the latest updates of the main LaMEM into your forked repository (step 2 above)","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Once your branch is ready and you would like to push it back to the main version of LaMEM, you should create a Pull Request, as described below.","category":"page"},{"location":"man/LaMEM_Development/#6.2.3-Switching-between-and-handling-branches","page":"LaMEM Development","title":"6.2.3 Switching between and handling branches","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Switch: git checkout <branchname>, for example git checkout boris/feature-add_phase_transitions\nShow local and remote-tracking branches: git branch -a\nShow available remotes: git remote -v\nShow all branches available on remote: git ls-remote. Use git remote show origin for a complete summary.\nDelete local branch: git branch -d <branchname> (only after merge to master is complete)\nDelete remote branch: git push origin :<branchname> (mind the colon in front of the branch name)","category":"page"},{"location":"man/LaMEM_Development/#6.3-Contributing-workflows","page":"LaMEM Development","title":"6.3 Contributing workflows","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Note that LaMEM is an open source-code, and the GPL license states that changes you made to the code must be pushed back to LaMEM. We think this is fair, because we have spend a considerable amount of time developping it without having received specific funding to create an open-source community code. By pushing back your contributions to master other users can benefit from your additions. If the additions are part of a paper that you would like to be cited, feel free to add the reference in the source code.  The LaMEM development team will make sure that things in master work and that tests will keep on running. By adding appropiate tests for your features it will also work in some time from now. Our experience shows that if you don't do this, or wait too long to push changes back to master, you will find that it becomes increasingly difficult to keep your branch in line with LaMEM/master.  ","category":"page"},{"location":"man/LaMEM_Development/#6.3.1-Before-filing-a-pull-request","page":"LaMEM Development","title":"6.3.1 Before filing a pull request","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"If your contribution can be logically decomposed into 2 or more separate contributions, submit them in sequence with different branches instead of all at once. That makes it much easier to detect and resolve issues.\nInclude tests which cover any changes to the source code.  Create a new directory for these tests within LaMEM/tests and add the test itself to runLaMEM_Tests.py. You will have to create a python file for each new test directory, and will have to add *.expected files. Please make sure that these tests run reasonably fast, as it will otherwise significantly slow down the full testing framework (in most cases it is sufficient to have a low resolution case for testing). Tests can also involve python based plotting or postprocessing, or even running MATLAB to create a setup, but this is not a requirement. If you do plotting and postprocessing you need to make sure that these tests will also work on machines that do not have the python plotting packages installed. You can most likely get inspiration by looking at the existing examples.\nRun the full test suite on your machine - i.e make test in the /LaMEM/tests directory before a pull request. All tests should pass; if not ensure that. \nMake sure that there are NO compiler warnings left if you compile a fresh version of LaMEM with make mode=deb clean_all; make mode=deb all\nDo the same on a different machine (e.g., linux, mac etc.) if it is available to you. Sometimes things work on one machine but not on the other.\nIf your additions resulted in new input parameters to the input script, add these new options (with a brief explanation of their meaning) to the input master file LaMEM/input_models/input/lamem_input.dat. Note that the nomenclature of the new parameters must be unique and case-independent. It is thus not allowed to call a paramater K, since we already have thermal conductivity k. The reason for this is that new parameters are automatically part of the adjoint inversion framework which otherwise gets confused.  New parameters should also have a clearly recognizable name (so everything related to your new plume inflow boundary condition should be called something like Plume_). Note that any new parameter in the input file can also automatically be called/overruled from the command line.\nMerge the latest version of master back into your branch and make sure that all tests work (you may have to resolve conflicts; if you do his step regularly as suggested above it will in general be easier to keep your branch up-to-date). \nMake sure that you have no memory leaks. That means that every vector/matrix/dm you created should also be destroyed with VecDestroy, etc. In addition, if you happen to allocate memory yourself (with PetscMalloc) you must make sure that you free the memory again (using PetscFree). A simple way to check that you are fine with the PETSc internal objects is to run your testfile with -log_view at the end. This will give you a picture such as this one  (Image: MemoryUsage) The number of creations must be the same as the number of destructions. The only exception is the Viewer, as the log_view itself is also a viewer. If there is a mismatch, you likely forgot to do a Destroy somewhere. Note that it is more difficult to track down PetscMalloc statements without corresponding PetscFree. Doing that is important as otherwise the memory of a simulation will go up with every timestep, which ultimately makes the simulations run out of memory. ","category":"page"},{"location":"man/LaMEM_Development/#6.3.2-Filing-a-pull-request","page":"LaMEM Development","title":"6.3.2 Filing a pull request","text":"","category":"section"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Once you are ready to push back your branch to the main version of LaMEM, you should create a pull request.  Creating a pull request is best done through the GitHub web page:","category":"page"},{"location":"man/LaMEM_Development/","page":"LaMEM Development","title":"LaMEM Development","text":"Go to your own GitHub account and the forked version of LaMEM. \nSelect branches on the left side and select the branch.\nOn the right side you will have the option Create Pull Request\nClick on that, and select as destination on the right UniMainzGeo/LaMEM and master \nCreate a title and a description of what the pull request is about\nSelect Anton and Boris as reviewers\nAnd push Create Pull Request\nBoris and Anton will reveive an email and at least one of us has to approve the pull request. If you want others to look at it as well, add them at this stage. They will all receive an email if the PR is created and if changes are made to the PR.\nWe will go over the code, test it ourselves, and in most cases make suggestions for changes. These can be incorporated into your branch by commiting changes in the usual manner. \nOnce approved, it will be merged to master and your branch will be closed. The tests will ensure that the new features will keep working.","category":"page"},{"location":"#LaMEM","page":"LaMEM","title":"LaMEM","text":"","category":"section"},{"location":"","page":"LaMEM","title":"LaMEM","text":"Documentation for LaMEM.","category":"page"}]
}
