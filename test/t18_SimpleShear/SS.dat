#  tests the simple shear boundary conditions

#===============================================================================
# Scaling
#===============================================================================

	units = geo

# === ALWAYS SI UNITS ===
	unit_temperature = 1.0
	unit_length      = 1e2
	unit_viscosity   = 1e18
	unit_stress      = 40e6

#===============================================================================
# Time stepping parameters
#===============================================================================

	time_end  = 100    	# simulation end time
	dt        = 0.01 	# time step
	dt_min    = 0.002  	# minimum time step (declare divergence if lower value is attempted)
	dt_max    = 2    	# maximum time step
	dt_out    = 0.1    	# output step (output at least at fixed time intervals)
	inc_dt    = 0.1    	# time step increment per time step (fraction of unit)
	CFL       = 0.5    	# CFL (Courant-Friedrichs-Lewy) criterion
	CFLMAX    = 0.8    	# CFL criterion for elasticity
	nstep_max = 3     # maximum allowed number of steps (lower bound: time_end/dt_max)
	nstep_out = 1      	# save output every n steps

#===============================================================================
# Grid & discretization parameters
#===============================================================================
# Number of cells for all segments

	nel_x = 8
	nel_y = 8
	nel_z = 8

# Coordinates of all segments (including start and end points)

	coord_x =   -10   10
	coord_y =   -10   10
	coord_z =  -40 -20.0

#===============================================================================
# Boundary conditions
#===============================================================================

# Default conditions on all the boundaries:

# Temperature on the top & bottom boundaries

	temp_top = 650
	temp_bot = 650;

	exy_num_periods  = 1       			# number intervals of constant simple shear strain rate (xz-axis)
	exy_strain_rates = -1e-15   		# strain rates for each interval (positive=extension)
	
	bg_ref_point     = 0.0 0.0 -20      # background strain rate reference point (fixed)
	


#===============================================================================
# Solution parameters & controls
#===============================================================================

	gravity        = 0.0 0.0 -10.0  # gravity vector
	act_temp_diff  = 0              # temperature diffusion activation flag
	init_guess     = 1              # initial guess flag
	p_litho_visc   = 1              # use lithostatic pressure for creep laws
	p_litho_plast  = 0              # use lithostatic pressure for plasticity
	p_lim_plast    = 1              # limit pressure at first iteration for plasticity
	p_shift 	   = 1000           # Shift pressure field (aka, move the whole domain down into the crust)  
	eta_min        = 1e19           # viscosity upper bound
	eta_max        = 1e27           # viscosity lower limit
	eta_ref        = 1e20           # reference viscosity (initial guess)
	DII_ref        = 1e-15          # background (reference) strain-rate
	tau_ult        = 1e9            # ultimate yield stress
	rho_fluid      = 1e3            # fluid density for depth-dependent density model
	gw_level_type  = surf           # ground water level type for pore pressure computation (see below)
	gw_level       = 0.0            # ground water level at the free surface (if defined)
	biot           = 1.0            # Biot pressure parameter

#===============================================================================
# Solver options
#===============================================================================
	SolverType 			=	direct 		# solver [direct or multigrid]
	#MGLevels 			=	4			# number of MG levels [default=3]
	DirectSolver 		=	mumps		# mumps/superlu_dist/pastix	
	DirectPenalty 		=	1e4			# penalty parameter [employed if we use a direct solver]
	
#===============================================================================
# Model setup & advection
#===============================================================================

	msetup         = geom #polygons          # setup type
	nmark_x        = 3                 # markers per cell in x-direction
	nmark_y        = 3                 # ...                 y-direction
	nmark_z        = 3                 # ...                 z-direction
	rand_noise     = 0                 # random noise flag
	bg_phase       = 0                 # background phase ID
	interp         = stag              # velocity interpolation scheme
	stagp_a        = 0.7               # STAG_P velocity interpolation parameter
	mark_ctrl      = subgrid           # marker control type
	nmark_lim      = 10 100            # min/max number per cell (marker control)
	nmark_sub      = 3                 # max number of same phase markers per subcell (subgrid marker control)

	# matrix
 	<LayerStart>
 		phase  			=  0
 		top    			= -20.0
 		bottom 			= -40.0
		
		Temperature 	= constant 
		cstTemp     	= 650     	# in Celcius
 	<LayerEnd>

	# heterogeneity 
	<CylinderStart>
		phase       	= 1
		radius      	= 2.5
		base        	= 0.0 -25.0 -27
		cap         	= 0.0  25.0 -27
		
		Temperature 	= constant 
		cstTemp     	= 650     	# in Celcius
	<CylinderEnd>




#===============================================================================
# Output
#===============================================================================

# Grid output options (output is always active)

	out_file_name       = SS_test # output file name
	out_pvd             = 1      # activate writing .pvd file
	out_phase           = 1
	out_density         = 1
	out_visc_total      = 1
	out_visc_creep      = 1
	out_velocity        = 1
	out_pressure        = 1
	out_eff_press       = 1
	out_tot_press 		= 1
	out_temperature     = 1
	out_dev_stress      = 1
	out_j2_dev_stress   = 1
	out_strain_rate     = 1
	out_j2_strain_rate  = 1
	out_yield           = 1
	out_plast_strain    = 1
	out_plast_dissip    = 1
	out_tot_displ       = 1
	out_moment_res      = 1
	out_cont_res        = 1
	out_energ_res       = 1


# AVD phase viewer output options (requires activation)
	out_avd     = 1 # activate AVD phase output
	out_avd_pvd = 1 # activate writing .pvd file
	out_avd_ref = 3 # AVD grid refinement factor

#===============================================================================
# Material phase parameters
#===============================================================================


	# rheology
	<MaterialStart>
		ID        	= 0
		rho       	= 3000
		
		diff_prof  	= Dry_Plagioclase_RybackiDresen_2000 	# DIFFUSION creep profile
		disl_prof  	= Dry_Plagioclase_RybackiDresen_2000    # DISLOCATION creep profile

		
		G         	= 5e10   		# Shear modulus
		ch        	= 20e6 			# Cohesion
		fr        	= 20  			# Friction angle [degrees]


		Cp        	= 1000			# Specific heat (capacity)
		k         	= 2.5000    	# Thermal conductivity
	<MaterialEnd>
	
	# inclusion
	<MaterialStart>
		ID        = 1
		rho       = 3000


		eta       = 1e20			# Viscosity
	
		G         = 5e10   			# Shear modulus
		ch        = 20e6 			# Cohesion
		fr        = 20  			# Friction angle [degrees]

		Cp        = 1000			# Specific heat (capacity)
		k         = 2.5000    		# Thermal conductivity
	<MaterialEnd>
	
	

#===============================================================================
# PETSc options
#===============================================================================

<PetscOptionsStart>

# SNES
	-snes_ksp_ew						# Eisenstat Walker algorithm

	-snes_monitor
	-snes_atol 1e-7   # 1e-12
	-snes_rtol 1e-4
	-snes_stol 1e-6
	-snes_max_it 200
	-snes_max_funcs 50000

	-js_ksp_atol 1e-10
	-js_ksp_rtol 1e-3
	-js_ksp_max_it 100

	-res_log

	# Linesearch options
#	-snes_linesearch_monitor
	-snes_linesearch_max_it 50
	-snes_linesearch_type l2				#Linesearch type (one of) shell basic l2 bt cp (SNESLineSearchSetType)  [l2 seems to work better with VEP]
	-snes_linesearch_maxstep 1.0			# very important to prevent the code from "blowing up"

	-snes_PicardSwitchToNewton_rtol 1e-1   # relative tolerance to switch to Newton (1e-2)

# Jacobian solver
	-js_ksp_monitor


<PetscOptionsEnd>

#===============================================================================
