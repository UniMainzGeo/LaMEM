# Standard falling block test

# Define number of elements in x,y & z-direction
# Negative number implies corresponding number of mesh segments
# Data is provided in the variables seg_x, seg_y, seg_z and includes:
#    * coordinates of the delimiters between the segments (n-1 points)
#    * number of cells                                    (n points)
#    * bias coefficients                                  (n points) 

nel_x						=   32    
nel_y						= 	32    
nel_z						= 	32

#nel_x						=	-3    
#nel_x						=   32    
#nel_y						= 	32    
#nel_z						= 	32

#seg_x = 0.7 0.8 10 4 2 0.3 1.0 3.0


# Geometry
DimensionalUnits		=	0			# Dimensionless (=0) or SI-dimensional units (=1)?
L						=	1			# Length (y-direction)
W						=	1			# Width  (x-direction)
H						=	1			# Height (z-direction)
x_left					=	0			# Left side of domain
y_front					=	0			# Front side of domain
z_bot					=	0			# Bottom of box

# --- Model setup and noise ---
msetup 					= block


# Define input/output and numerics-related stuff
OutputFile					=	FB_test		
save_timesteps				=	1				# save every ? timesteps
time_end					=	2				# last timestep
CFL							=	0.5				# CFL, dt-based criterium
dt_max						=	1e-5	  	   	# Maximum timestep [years if dimensional]
save_breakpoints			= 	-1 				#  -1: don't save breakpoints + initial particles
												#   0: save initial particles only !
												# 0+n: after how many timesteps we save a breakpointfile
												
# Boundary conditions
BC.LeftBound				=	1				# 0 - free surface, 1-free slip with BG strainrate Eyy, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.RightBound				=	1				# 0 - free surface, 1-free slip with BG strainrate Eyy, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.FrontBound				=	1				# 0 - free surface, 1-free slip with BG strainrate Exx, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.BackBound				=	1				# 0 - free surface, 1-free slip with BG strainrate Exx, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.LowerBound				=	1				# 0 - free surface, 1-free slip, 				  2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.UpperBound				=	1				# 0 - free surface, 1-free slip, 				  2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
Temp_top	    			=   0				# Temperature @ top
Temp_bottom					=   1 				# Temperature @ bottom; side BC's are flux-free


<PetscOptionsStart>
	# Initial timestep
	-dt 1e-2
	
	# Assume that the material is fully incompressible (converges faster)
	-pcmat_no_dev_proj

	# Use free surface stabilization algorithm:
	-FSSA 1.0			# FSSA parameter

	# Fine-tune solver options here (add command-line Petsc Options)
	-AddRandomNoiseParticles	0				# Adding noise to the particles (1) or not (0)
	-restart 0

	# LINEAR & NONLINEAR SOLVER OPTIONS --------------------------------------------------
	-snes_type 		ksponly				# no nonlinear solver 

	# Jacobian (linear) outer KSP
	-js_ksp_type gmres
	-js_ksp_max_it 150
	-js_ksp_min_it 1
	-js_ksp_converged_reason
 	-js_ksp_monitor
	-js_ksp_rtol 1e-3
	-js_ksp_atol 1e-5
	
	# Stokes Preconditioner
	-pstokes mg					# multigrid

	# Matrix type
	-pcmat_type mono			# monolithic matrix [coupled MG solver]
	-jp_type mg					# multigrid 

	# Multigrid preconditioner settings
	-gmg_pc_type mg
	-gmg_pc_mg_levels 3			# 5 MG levels, gives coarse grid of 32x16x8
	-gmg_pc_mg_galerkin			# 	
	-gmg_pc_mg_type multiplicative
	-gmg_pc_mg_cycle_type v
	#-gmg_pc_view 
	-gmg_pc_mg_log				# monitors time spend in multigrid if using -log_summary @ the end
	
	
	# RICHARDSON/JACOBI MG Smoothener - [Anton's favorite options]
	-gmg_mg_levels_ksp_type richardson
	-gmg_mg_levels_ksp_richardson_scale 0.5
	-gmg_mg_levels_pc_type jacobi
	-gmg_mg_levels_ksp_max_it 20
	

	# DIRECT, REDUNDANT COARSE SOLVER
    -crs_ksp_type preonly
    -crs_pc_type redundant
	-crs_pc_redundant_number 1								# split domain in 4 pieces so ever direct solver step is done on 512 cores
	-crs_redundant_pc_factor_mat_solver_package superlu_dist		# uses mumps as local direct solver	[superlu_dist is another option]
	
	#-------------------------------------------------------------------------------------

	# control output viewer
	-out_pvd 1
	-out_phase 1  
	-out_density 1
	-out_velocity 1
	-out_pressure 1
	-out_temperature 1 
	-out_dev_stress 1
	-out_j2_dev_stress 1
	-out_strain_rate 1
	-out_j2_strain_rate 1
	-out_moment_res 1
	-out_cont_res 1
	-out_plast_strain 1
	
	-out_avd 1     #    - activates AVD viewer (off by default)
    -out_avd_ref 3 # - defines grid refinement factor (2 by default)
    -out_avd_pvd 1 # - activates writing pvd time series file (off by default)
	
	-objects_dump
	
<PetscOptionsEnd>
    
# Phase distribution
NumPartX				=	2   # Particles/Cell in x-direction
NumPartY				=	2   # Particles/Cell in y-direction
NumPartZ				=	2	# Particles/Cell in z-direction

# Properties that are defined over the whole domain:
Gravity					=  -1;									# [m/s2] - gravitational acceleration 

# Define phase transitions for particles
LowerViscosityCutoff			=	1e-3
UpperViscosityCutoff			=	1e12
DII_ref 						=	1

# Define material properties for all phases -------------------------------------------------

	# Define properties of matrix -----------------
	<MaterialStart>
		ID 			=	0			# phase id  [-]
		rho0        = 	1			# density - if dimensional [kg/m3]
		
		eta			= 	1		# viscosity - if dimensional [Pa.s]
	<MaterialEnd>
	
	# Define properties of block -----------------
	<MaterialStart>
		ID 			=	1			# phase id  [-]
		rho0        = 	2			# density - if dimensional [kg/m3]
		
		eta			= 	100		# viscosity - if dimensional [Pa.s]
	<MaterialEnd>

# End of defining material properties for all phases ----------------------------------------
