# ----------------------------------------------------------------------------------------------------------------------
# A basic parameter file for FDSTAG setups - Diapir
#	3-D Subduction setup - use CreatePhases.m to generate the input geometry  
#	NOTE: the default setup 
# ----------------------------------------------------------------------------------------------------------------------

# ----------------------------------------------------
# Number of elements in x,y,z-direction 
# ----------------------------------------------------
nel_x						=  6
nel_y						=  2   
nel_z						=  20
 
# Variable grid spacing
#nel_x						=	-3    
#seg_x = 0.7 0.8 10 4 2 0.3 1.0 3.0
# Define number of elements in x,y & z-direction
# Negative number implies corresponding number of mesh segments
# Data is provided in the variables seg_x, seg_y, seg_z and includes:
#    * coordinates of the delimiters between the segments (n-1 points)
#    * number of cells                                    (n points)
#    * bias coefficients                                  (n points) 

# ----------------------------------------------------
# Particle resolution
# ----------------------------------------------------
NumPartX					=	5		#  Particles/Cell in x-direction
NumPartY					=	5		#  Particles/Cell in y-direction
NumPartZ					=	5		#  Particles/Cell in z-direction



# ----------------------------------------------------
# Box Geometry 
# ----------------------------------------------------
Gravity						=	-1		# [m/s2] - gravitational acceleration 
DimensionalUnits			=	0		# Dimensionless (=0) or SI-dimensional units (=1)? 
units						=	none

W							=	1.5		# Width  (x-direction) [km]
L							=	0.001		# Length (y-direction) [km]
H							=	1		# Height (z-direction) [km]
x_left						=	0	# Left side of domain [km]
y_front						=   0	# Front side of domain [km]
z_bot						=	0	# Bottom of box [km]

# ----------------------------------------------------
# Scaling
# ----------------------------------------------------
Characteristic.Length		=	1		# [m]		
Characteristic.Viscosity 	=	1		# [Pa.s]
Characteristic.Temperature	=	1		# [K]
Characteristic.Stress    	=   1		# [Pa]
DII_ref                     =	1e-20 		# [ 1/s]
#InitViscosity               = 	1		# [Pa.s]
# ----------------------------------------------------
# Model Setup
# ----------------------------------------------------
msetup                         = parallel
ParticleFilename               = Particles				# File that contains markers distribution (matlab)
LoadInitialParticlesDirectory  = MatlabInputParticles 	# directory that contains markers distribution (matlab)

#msetup = parallel
#LoadInitialParticlesDirectory = Particl
#Filename = MarkersInput3D
#TemperatureFilename = Temperature.bin

# ----------------------------------------------------
# Input/Output and Numerics
# ----------------------------------------------------

OutputFile					=	Rayleigh
save_timesteps				=	1	# save every X timesteps
time_end					=   1     # last timestep
save_breakpoints			= 	-1    	#  -1: don't save breakpoints + initial particles
											#   0: save initial particles only !
											# 0+n: after how many timesteps we save a breakpointfile
SaveParticles 				=	0			# save particles files yes (1) or no (0) 
CFL							=	1			# Courant-criteria dt = min(dx,dy,dz)/max(Vx,Vy,Vz)*CFL (0.5-1.0)
dt_max						=	1		# Maximum timestep [Myr]
									
# ----------------------------------------------------
# Boundary Conditions
# ----------------------------------------------------
Temp_top	    			=   1		# Temperature @ top [deg C]
Temp_bottom					= 1 	# Temperature @ bottom; side BC's are flux-free by default [deg C]

# ----------------------------------------------------
# Adjoint gradients
# ----------------------------------------------------
ComputeAdjointGradients	    	= 2 # Compute gradients?
Adjoint_x					= 1.49 	# x coordinate of the point where to compute the gradient
Adjoint_y					= 0.0  	# y coordinate of the point where to compute the gradient
Adjoint_z					= 0.5099 	# z coordinate of the point where to compute the gradient
#                            (Vx   Vy   Vz
#                            (1    2    3)
AdjointVel                  = 3
# Possible parameters: (rho rho_n rho_c beta) (K Kp G) (Bd Ed Vd) (Bn n  En Vn) (taup gamma q )
#                      ( 1     2     3    4 ) (5  6 7) ( 8  9 10) (11 12 13 14) ( 15    16  17)
AdjointParameters               =       1 8    # Important to leave spaces here!!
AdjointPhases                   =       1 1
AdjointLowerBound     = 0 0.00001
AdjointUpperBound     = 10  10



# ----------------------------------------------------
# Other Properties 
# ----------------------------------------------------		

# --- Viscosity Cutoff ---
LowerViscosityCutoff		=	0.0		# [Pa.s]
UpperViscosityCutoff		=	100.0		# [Pa.s]

# ----------------------------------------------------
# BOUNDARY CONDITIONS
# ----------------------------------------------------	
# BC.LowerBound = 2
# BC.UpperBound = 0

# ----------------------------------------------------
# Phases and Material Properties
# ----------------------------------------------------
# New Input
new_input = 1
# --------------------------
	# Sticky Air [0]
  	# --------------------------
	<MaterialStart>
		ID   = 0
		rho0 = 0.1
		eta = 1
		# Bn  = 0.5			# viscosity [Pas]
		# e0 = 1e-20
		# n = 1
	<MaterialEnd>

	# --------------------------
	# Overburden [1]
  	# --------------------------
	<MaterialStart>
		ID   = 1			# phase id
		rho0 = 0.000000001		# density [kg/m^3]    #3    0.000000001
		eta = 0.01						#5  0.01
		# Bn  = 2.5			# viscosity [Pas]
		# e0 = 1e-20
		# n = 3
		
	<MaterialEnd>
#0.000000001
	# --------------------------
	# Salt [2]
  	# --------------------------
	# Define properties of bottom layer Salt1
	<MaterialStart>
		ID   = 2			# phase id
		rho0 = 0			# density [kg/m^3]
		eta = 1
		# Bn  = 0.5			# viscosity [Pas]
		# e0 = 1e-20
		# n = 1
		
	<MaterialEnd>

# End of defining material properties for all phases ----------------------------------------

# ----------------------------------------------------
# PETSC OPTIONS (SOLVER)
# ----------------------------------------------------

<PetscOptionsStart>
	# use canonical (new) version of LaMEM
	-use_fdstag_canonical						

	# advect with RK4
	-advection 2

	# interpolate using MINMOD
	-velinterp 2
	
	# Shift pressure (P=0 at surface)
	-shift_press

	# Bg strain rates
	-ExxNumPeriods 1
	-ExxTimeDelims  0
	-ExxStrainRates -1e-20
	
	# Free surface
	-surf_use 0
	-surf_level 1.0
	-surf_air_phase 0

	# Sedimentation
    -ErosionModel 0
    -SedimentModel 0

	-out_surf_pvd 0
	-out_surf_velocity 0
	-out_surf_topography 0
	-out_surf_amplitude 0
	
	-tao_type lmvm
	-tao_fatol 1e-15
	-tao_gatol 1e-15
	-tao_frtol 1e-15
	-tao_converged_reason

	
	# Initial timestep in Myrs
	-dt 1
	
	# Assume that the material is fully incompressible (converges faster)
#	-pcmat_no_dev_proj

	# Use free surface stabilization algorithm:
	-FSSA 0.0

	# Print residuals and divergence after every timestep
	-res_log


	# Fine-tune solver options here (add command-line Petsc Options)
	-AddRandomNoiseParticles 0					# Adding noise to the particles (1) or not (0)
	-restart 0
    #-use_marker_control

	# LINEAR & NONLINEAR SOLVER OPTIONS --------------------------------------------------
	-snes_PicardSwitchToNewton_rtol 1e3 		# relative tolerance to switch to Newton (1e-2)
	-snes_NewtonSwitchToPicard_it  	100 			# number of Newton iterations after which we switch back to Picard until the residual is reduced to snes_PicardSwitchToNewton_rtol (35)
	-snes_NewtonSwitchToPicard_rtol 1e20		# relative tolerance compared to first iteration step after which to switch to Picard again (1.1) 



	# SNES (nonlinear) options
    
#	-snes_ksp_ew			# Eisenstat Walker algorithm
#	-snes_ksp_ew_rtol0 1e-3
	-snes_npicard 5			# 2 picard iterations @ beginning of ever timestep
	-snes_monitor			
	-snes_atol 1e-20
	-snes_rtol 1e-20
	-snes_stol 1e-16
	-snes_max_it 10
	-snes_max_funcs 500000
	-snes_max_linear_solve_fail 10000
	#-mat_mffd_err 1e-4	
	-snes_type 		ksponly

	# Linesearch options
	#-snes_linesearch_monitor
	#-snes_linesearch_type cp 			#Linesearch type (one of) shell basic l2 bt cp (SNESLineSearchSetType)  [l2 seems to work better with VEP]
	#-snes_linesearch_maxstep 1.0			# very important to prevent the code from "blowing up"
	
	# Jacobian (linear) outer KSP
	-js_ksp_type fgmres
	-js_ksp_max_it 20
	-js_ksp_converged_reason
 	-js_ksp_monitor
	-js_ksp_rtol 1e-10
	-js_ksp_atol 1e-10
	
	# Adjoint (linear) KSP
	-as_ksp_type fgmres
	-as_ksp_max_it 20
	-as_ksp_converged_reason
 	-as_ksp_monitor
	-as_ksp_rtol 1e-10
	-as_ksp_atol 1e-10
	
	# Stokes Preconditioner
	-pstokes mono					

	# Matrix type
	-pcmat_type mono			# monolithic matrix [coupled MG solver]
	-pcmat_pgamma 1e4
	-jp_type user					
	-jp_pc_type lu
	-jp_pc_factor_mat_solver_package superlu_dist

	# Multigrid preconditioner settings
	#-gmg_pc_type mg
	#-gmg_pc_mg_levels 2			# 5 MG levels, gives coarse grid of 32x16x8	
	#-gmg_pc_mg_galerkin			# 	
	#-gmg_pc_mg_type multiplicative
	#-gmg_pc_mg_cycle_type v
	#-gmg_pc_view 
	#-gmg_pc_mg_log				# monitors time spend in multigrid if using -log_summary @ the end
	
	
	# matrix free analytical Jacobian
	# -jac_mat_free
	
	
	# RICHARDSON/JACOBI MG Smoothener - [Anton's favorite options]
	-gmg_mg_levels_ksp_type richardson
	-gmg_mg_levels_ksp_richardson_scale 0.5
	-gmg_mg_levels_pc_type jacobi
	-gmg_mg_levels_ksp_max_it 10
	

	# DIRECT, REDUNDANT COARSE SOLVER
    #    -crs_ksp_type preonly
    #    -crs_pc_type redundant
	#-crs_pc_redundant_number 1			# split domain in 4 pieces so ever direct solver step is done on 512 cores
	#-crs_redundant_pc_factor_mat_solver_package superlu_dist		# uses mumps as local direct solver	[superlu_dist is another option]
	#-------------------------------------------------------------------------------------



	# control output viewer
	-out_pvd 1
	-out_phase 1  
	-out_density 1
	-out_viscosity 1
	-out_velocity 1
	-out_pressure 1
	-out_temperature 1 
	-out_dev_stress 1
	-out_j2_dev_stress 1
	-out_strain_rate 1
	-out_j2_strain_rate 1
	-out_plast_strain 1
	-out_moment_res 1
	-out_cont_res 1
 
	-out_avd 1
        -out_avd_ref 5
	-out_avd_pvd 1 
	
	-objects_dump

	
	
<PetscOptionsEnd>
