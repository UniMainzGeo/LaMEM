# ----------------------------------------------------------------------------------------------------------------------
# A basic parameter file for FDSTAG Canonical setup for subduction
# NOTE: use CreateMarkers_Subduction.m to generate the input geometry
# ----------------------------------------------------------------------------------------------------------------------

# Define number of elements in x, y, z-direction
# Negative number implies corresponding number of mesh segments
# Data is provided in the variables seg_x, seg_y, seg_z and includes:
#    * coordinates of the delimiters between the segments (n-1 points)
#    * number of cells                                    (n points)
#    * bias coefficients                                  (n points) 
 
#nel_x						=   -3    
nel_x						=   64    
#seg_x 	=  -10 10 6 20 6 1.0 1.0 1.0
nel_y						=   2    
#nel_z						=   32 
nel_z                       			=   -3
seg_z 	= -100 0 6 20 6 1.0 1.0 1.0



# Geometry
units                           	=	geo    # geology units
Characteristic.Length			=	1000e3 # [m]				
Characteristic.Viscosity 		=	1e20   # [Pa s]	
Characteristic.Temperature		=	1000   # [K]		
Characteristic.Stress      		=   	1e12   # [Pa]			

W					=	500	# Width  (x-direction)
L					=   	1	# Length (y-direction)
H					=	130	# Height (z-direction)

x_left					=	-250 	# Left side of domain
y_front					=	0       # Front side of domain
z_bot					=	-120    # Bottom of box

# Phase distribution
NumPartX				=	3   	# Particles/Cell in x-direction
NumPartY				=	3   	# Particles/Cell in y-direction
NumPartZ				=	3       # Particles/Cell in z-direction

# Properties that are defined over the whole domain:
Gravity					=  	-10;	# [m/s2] - gravitational acceleration 

# --- Model setup and noise ---
msetup                        		= 	redundant 	#or [parallel]
ParticleFilename              		= 	MarkersInput3D 	#Particles(for parallel); File that contains markers distribution (matlab)
LoadInitialParticlesDirectory 		= 	./ 

# Define input/output and numerics-related stuff
OutputFile				=	subduction		
save_timesteps				=	1      	# save every ? timesteps
time_end				=	2	# last timestep
CFL					=	0.3	# CFL, dt-based criterium
dt_max					=	0.1	# Maximum timestep [Myrs]
	
# Boundary conditions
Temp_top	    			=   	0	# Temperature @ top
Temp_bottom				=   	1300 	# Temperature @ bottom; side BC's are flux-free



# ----------------------------------------------------
# Pushing Boundary Conditions by Adina, Sep.9,2015
# ----------------------------------------------------
AddPushing                  =   0               # 1 - pushing; 0 - no pushing;

<PushingBlockStart>
    PushID              =   0                   # pushing block id
    num_changes         =   1                   # no. of changes in the pushing direction
    time                =   0 0.5               # Time segments [Myr] as an array
    V_push              =   -5.0                # [cm/yr] as an array
    dir                 =   1                   # preferred direction of pushing: 0-rotation, 1-Vx direction, 2-Vy direction
    omega               =   0                   # rate of rotation [deg/Myr] as an array
    coord_advect        =   1                   # 0 - fixed pushing block, 1 - moving pushing block
    reset_pushing_coord =   0                   # 0 - no reset, 1 - reset pushing coord every timestep
    theta               =   0                   # angle from which rotation should start
    L_block             =   40                  # Length (x-direction) [km]
    W_block             =   1                   # Length (y-direction) [km]
    H_block             =   40                  # Length (z-direction) [km]
    x_center_block      =   230                 # Coordinates of x center [km]
    y_center_block      =   0.5                 # Coordinates of y center [km]
    z_center_block      =   -20                 # Coordinates of z center [km]
<PushingBlockEnd>

<PushingBlockStart>
    PushID              =   1
    num_changes         =   1
    time                =   0 100
    V_push              =   2.5
    dir                 =   1
    omega               =   0
    coord_advect        =   1
    reset_pushing_coord =   0
    theta               =   0
    L_block             =   40
    W_block             =   1
    H_block             =   40
    x_center_block      =   -230
    y_center_block      =   0.5
    z_center_block      =   -20
<PushingBlockEnd>

#===============================================================================
# ............................ PETSc options ...................................
#===============================================================================

<PetscOptionsStart>

	# If you have a non-linear system just switch off the option 	-snes_type ksponly and tune the solver options
    # From Adina: July 21,2015

	# SNES (nonlinear) options
	-snes_ksp_ew			# Eisenstat Walker algorithm
	-snes_ksp_ew_rtol0 1e-2
	-snes_ksp_ew_rtolmax 1e-2
	#-snes_ksp_ew_gamma
	-snes_monitor			
	-snes_atol 1e-4
	-snes_rtol 1e-5
	-snes_stol 1e-16
	-snes_max_it 40 
	-snes_max_funcs 500000
	-snes_max_linear_solve_fail 10000
	#-snes_type ksponly

	# Newton/picard options
	-snes_PicardSwitchToNewton_rtol 1e-2 		# relative tolerance to switch to Newton (1e-2)
	-snes_NewtonSwitchToPicard_it  	20		# number of Newton iterations after which we switch back to Picard 
	-snes_NewtonSwitchToPicard_rtol 1.1		# relative tolerance compared to first iteration step 
	# Linesearch options
	-snes_linesearch_monitor
	-snes_linesearch_type l2 			#Linesearch type (one of) shell basic l2 bt cp (SNESLineSearchSetType)  [l2 seems to work better with VEP]
	-snes_linesearch_maxstep 1.0			# very important to prevent the code from "blowing up"
	
	# Jacobian (linear) outer KSP
	-js_ksp_type fgmres
#	-js_ksp_gmres_restart 100
	-js_ksp_max_it 30 
	-js_ksp_converged_reason
	-js_ksp_monitor
	-js_ksp_rtol 1e-5
	-js_ksp_atol 1e-4
	
	# Stokes Preconditioner
	-pstokes mg				# multigrid

	# Matrix type
	-pcmat_type mono			# monolithic matrix [coupled MG solver]
	#-pcmat_no_dev_proj          		# Assume that the material is fully incompressible (converges faster)
	-jp_type mg					# multigrid 

	# Multigrid preconditioner settings
	-gmg_pc_type mg
	-gmg_pc_mg_levels 6			# 5 MG levels, gives coarse grid of 32x16x8	
	-gmg_pc_mg_galerkin			# 	
	-gmg_pc_mg_type multiplicative
	-gmg_pc_mg_cycle_type v
	#-gmg_pc_view 
	-gmg_pc_mg_log				# monitors time spend in multigrid if using -log_summary @ the end
	
	
	# RICHARDSON/JACOBI MG Smoothener - [Anton's favorite options]
	-gmg_mg_levels_ksp_type richardson
	-gmg_mg_levels_ksp_richardson_scale 0.2
	-gmg_mg_levels_pc_type jacobi
	-gmg_mg_levels_ksp_max_it 10 
	

	# DIRECT, REDUNDANT COARSE SOLVER
	-crs_ksp_type preonly
   	-crs_pc_type redundant
	-crs_pc_redundant_number 1				 # split domain in 4 pieces so ever direct solver step is done on 512 cores
	-crs_redundant_pc_factor_mat_solver_package superlu_dist # uses mumps as local direct solver	[superlu_dist is another option]

	### LATEST additions
	-InitViscosity 1e20 
	-div_tol 1e1   # 5e-1

	# pesuo-2d: no MG in y direction
	-da_refine_y 1


	# Additional command-line Petsc Options
	-use_fdstag_canonical # tell LaMEM to use the new LaMEM version,important!
#	-restart 0
#	-SavePartitioning

	# Logfiles
    	-res_log 1
    	#-log_summary
   	#-snes_monitor myfile

	# advect with RK4
    	-new_advection
	-advection 0		# marker advection,0-Euler, 1-2th RK, 2-4th RK(Runge-Kutta) 
	-velinterp 2 		# velocity interpolation, 0-STAG, 1-NODE, 2-minmod,



	# marker control
    	-use_marker_control
	-markers_min 16
	-markers_max 100

	# activate temperature diffusion
	#-act_temp_diff
	#-shearHeatEff 0.5 

	# variable background strain rate

	#-ExxNumPeriods  1
	#-ExxTimeDelims  100.0
	#-ExxStrainRates -1e-14

	#-EyyNumPeriods  1
	#-EyyTimeDelims  100.0
	#-EyyStrainRates -1e-15

	# internal free surface
	-surf_use        1
	-surf_level      0
	-surf_air_phase  0
	-FSSA 1.0 

	-out_surf_pvd        1
	-out_surf_velocity   1
	-out_surf_topography 1
	-out_surf_amplitude  1

	-out_plast_dissip 1
	-out_pvd 1
	-out_phase 1  
	-out_density 1
	-out_viscosity 1
	-out_velocity 1
	-out_pressure 1
    	-out_dev_stress 1
    	-out_j2_dev_stress 1
    	-out_strain_rate 1
    	-out_j2_strain_rate 1
    	-out_temperature 1
    	-out_plast_strain 1
    	-out_ang_vel_mag 1
    	-out_shmax 1
    	-out_isa 1
    	-out_gol 1
    	-out_tot_displ 1
    	-out_moment_res 1
    	-out_cont_res 1


	-out_markers 1
	-out_mark_pvd 1

    	#-out_avd 1
    	#-out_avd_ref 3
    	#-out_avd_pvd 1

<PetscOptionsEnd>



# viscosity cutoff and initial strain-rate guess
LowerViscosityCutoff			=	1e18
UpperViscosityCutoff			=	1e22
DII_ref                         	= 	1e-15    





#===============================================================================
# ............................ Material Parameters .............................
#===============================================================================

    # ------------------- air -------------------
	<MaterialStart>
	ID   	= 	0
	rho0	= 	1
        
        # creep
	eta    	= 	1e18

    	# temp
        #cp          =   1.2e3 # heat capacity
        #k           =   1e3
	<MaterialEnd>




    # ------------------- Slab -------------------
	<MaterialStart>
	ID   	= 	1
	rho0	= 	3300

	# creep
        eta     =   1e22

	# elasticity
    #    shear   =   3.6e10
        
        # Plasticity
#        cohesion    =   20e6 # cohesion [Pa]
#        friction    =   30 # friction angle [deg]
#        frSoftID    =   0 # softening ID

        # temp
        #cp          =   1.2e3 # heat capacity
        #k           =   2.5
	<MaterialEnd>


#<SofteningStart>
#    softID      =   0
#    A           =   0.9 # softening ratio, A=1-a/a0
#    APS1        =   0.1 # starting softening of plastic strain
#    APS2        =   0.5 # ending softening of plastic strain
#<SofteningEnd>


# ------------------- Mantle -------------------
	<MaterialStart>
	ID   	= 	2
	rho0	= 	3200

	# creep
        eta     =   1e21

	# elasticity
    #    shear   =   3.6e10
        
        # Plasticity
#        cohesion    =   20e6 # cohesion [Pa]
#        friction    =   30 # friction angle [deg]
#        frSoftID    =   0 # softening ID

        # temp
       #cp          =   1.2e3 # heat capacity
       # k           =   2.5
	<MaterialEnd>






	
	
# End of defining material properties for all phases ----------------------------------------
