# Standard falling block test

# Define number of elements in x,y & z-direction
# Negative number implies corresponding number of mesh segments
# Data is provided in the variables seg_x, seg_y, seg_z and includes:
#    * coordinates of the delimiters between the segments (n-1 points)
#    * number of cells                                    (n points)
#    * bias coefficients                                  (n points) 

nel_x						=   	16    
nel_y						= 	2   
nel_z						= 	16

#nel_x						=	-3    
#seg_x = 0.7 0.8 10 4 2 0.3 1.0 3.0

# Geometry
units = none
DimensionalUnits				=	0			# Dimensionless (=0) or SI-dimensional units (=1)?
L						=	0.125			# Length (y-direction)
W						=	1			# Width  (x-direction)
H						=	1			# Height (z-direction)
x_left						=	-0.5			# Left side of domain
y_front						=	0			# Front side of domain
z_bot						=	-0.5			# Bottom of box

# Phase distribution
NumPartX				=	3   # Particles/Cell in x-direction
NumPartY				=	3   # Particles/Cell in y-direction
NumPartZ				=	3	# Particles/Cell in z-direction

# Properties that are defined over the whole domain:
Gravity					=	-1;									# [m/s2] - gravitational acceleration 

# --- Model setup and noise ---

msetup = rotation

#msetup                        = redundant
#ParticleFilename              = 100x100x100_10percent_channel # File that contains markers distribution (matlab)
#LoadInitialParticlesDirectory = darcy_markers                 # directory that contains markers distribution (matlab)

# Define input/output and numerics-related stuff
OutputFile					=	Rotation_test		
save_timesteps					=	1				# save every ? timesteps
time_end					=	1				# last timestep
save_breakpoints                                =       -1
CFL						=	0.25			# CFL, dt-based criterium
dt_max						=	0.5 	  	   	# Maximum timestep [years if dimensional]
	
# Boundary conditions
BC.Eyy						=	0.0				# BG strainrate in y-direction
BC.Exx						=	0.0				# BG Strainrate in x-direction
BC.LeftBound					=	1				# 0 - free surface, 1-free slip with BG strainrate Eyy, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.RightBound					=	1				# 0 - free surface, 1-free slip with BG strainrate Eyy, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.FrontBound					=	1				# 0 - free surface, 1-free slip with BG strainrate Exx, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.BackBound					=	1				# 0 - free surface, 1-free slip with BG strainrate Exx, 2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.LowerBound					=	1				# 0 - free surface, 1-free slip, 				  2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
BC.UpperBound					=	1				# 0 - free surface, 1-free slip, 				  2 - no slip, 5 - growthrate 2D, 7 - growthrate 3D
Temp_top	    				=   	0				# Temperature @ top
Temp_bottom					=   	0 				# Temperature @ bottom; side BC's are flux-free


<PetscOptionsStart>

# SNES

	-snes_npicard 3
	-snes_monitor
	-snes_atol 1e-12
	-snes_rtol 1e-6
	-snes_stol 1e-6
	-snes_max_it 25
	-snes_max_funcs 50000
	-snes_type ksponly

# Jacobian solver

	-js_ksp_type fgmres
	-js_ksp_max_it 1000
	-js_ksp_converged_reason
 	-js_ksp_monitor
	-js_ksp_rtol 1e-6

# Preconditioner

	-pcmat_type block
	-pcmat_pgamma 1e3
	-jp_type bf
	-bf_vs_type user
	-vs_ksp_type preonly
	-vs_pc_type lu
	-vs_pc_factor_mat_solver_package mumps


# Additional command-line Petsc Options
	-use_fdstag_canonical
	-AddRandomNoiseParticles 0
	-restart 0
#	-SavePartitioning

	-out_pvd 1
	-out_phase 1  
	-out_density 1
	-out_viscosity 1
	-out_velocity 1
	-out_pressure 1
	-out_temperature 1 
	-out_dev_stress 1
	-out_j2_dev_stress 1
	-out_strain_rate 1
	-out_j2_strain_rate 1

	-out_markers 1
	-out_mark_pvd 1

	-objects_dump

<PetscOptionsEnd>
    

# Optimization
LowerViscosityCutoff			=	1e-3
UpperViscosityCutoff			=	1e12
DII_ref                                 =       1e-16

# Define material properties for all phases -------------------------------------------------

  	# --------------------------
	# MATRIX [0]
  	# --------------------------
	<MaterialStart>
		ID 			=	0	# phase id  [-]
		rho0        		= 	1	# density - if dimensional [kg/m3]
		eta			= 	1	# ref.  viscosity - if dimensional [Pa.s]
	<MaterialEnd>

  	# --------------------------
	# CIRCLE [1]
  	# --------------------------
	<MaterialStart>
		ID 			=	1	# phase id  [-]
		rho0        		= 	1	# density - if dimensional [kg/m3]
		eta			= 	1	# ref.  viscosity - if dimensional [Pa.s]
	<MaterialEnd>
	
# End of defining material properties for all phases ----------------------------------------
